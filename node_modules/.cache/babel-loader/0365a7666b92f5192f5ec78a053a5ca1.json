{"ast":null,"code":"var _jsxFileName = \"/home/adarsh/Desktop/POC/Final/React-editor/editor-continue-position/src/components/slider/slider.js\";\nimport React from 'react';\nimport './slider.css';\nimport $ from \"jquery\";\n\nvar slider = function slider(props) {\n  return props.SliderRange.selected ? React.createElement(\"div\", {\n    className: \"slidecontainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    id: \"trans\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"Transparency\"), React.createElement(\"input\", {\n    type: \"range\",\n    min: \"0\",\n    max: \"100\",\n    value: props.SliderRange.range,\n    className: \"slider\",\n    id: \"myRange\",\n    onChange: function onChange(event) {\n      return props.draggged(event);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, props.SliderRange.range), props.SliderRange.selected.map(function (element, i) {\n    var x = $(element).attr('id');\n\n    if (x.indexOf('text') > -1) {\n      x = x.slice(0, 10);\n    }\n\n    return React.createElement(\"span\", {\n      key: i + x,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, x);\n  })) : props.SliderRange.name === 'brightness' || props.SliderRange.name === 'contrast' || props.SliderRange.name === 'saturation' || props.SliderRange.name === 'vibrance' || props.SliderRange.name === 'exposure' ? React.createElement(\"div\", {\n    className: \"slidecontainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    id: \"trans\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, props.SliderRange.name), React.createElement(\"input\", {\n    type: \"range\",\n    min: \"-100\",\n    max: \"100\",\n    step: \"1\",\n    value: props.SliderRange.range,\n    className: \"slider\",\n    id: props.SliderRange.name,\n    onChange: function onChange(event) {\n      return props.draggging(event, props.SliderRange);\n    },\n    onMouseUp: props.mouseLeft,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, props.SliderRange.range)) : React.createElement(\"div\", {\n    className: \"slidecontainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    id: \"trans\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, props.SliderRange.name), React.createElement(\"input\", {\n    type: \"range\",\n    min: \"0\",\n    max: \"100\",\n    step: \"1\",\n    value: props.SliderRange.range,\n    className: \"slider\",\n    id: props.SliderRange.name,\n    onChange: function onChange(event) {\n      return props.draggging(event, props.SliderRange);\n    },\n    onMouseUp: props.mouseLeft,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, props.SliderRange.range));\n};\n\nexport default slider;","map":{"version":3,"sources":["/home/adarsh/Desktop/POC/Final/React-editor/editor-continue-position/src/components/slider/slider.js"],"names":["React","$","slider","props","SliderRange","selected","range","event","draggged","map","element","i","x","attr","indexOf","slice","name","draggging","mouseLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './slider.css'\nimport $ from \"jquery\";\nconst slider = (props) => {  \n    return props.SliderRange.selected ?  ( \n      <div className=\"slidecontainer\">\n      <span id=\"trans\">Transparency</span>\n      <input type=\"range\" min=\"0\" max=\"100\" value={props.SliderRange.range} className=\"slider\" id=\"myRange\" \n      onChange={(event) => props.draggged(event)}/>\n      <span>{props.SliderRange.range}</span>\n      {\n        props.SliderRange.selected.map((element, i) => {\n          let x = $(element).attr('id')\n          if(x.indexOf('text') > -1){\n            x = x.slice(0,10)\n          }\n         return(  \n          <span key={i + x}>{x}</span>\n         )\n        })\n      }\n    </div>\n   ) :  props.SliderRange.name === 'brightness' || props.SliderRange.name === 'contrast' || \n   props.SliderRange.name === 'saturation' || \n   props.SliderRange.name === 'vibrance' || props.SliderRange.name === 'exposure' ?\n   ( \n    <div className=\"slidecontainer\">\n    <span id=\"trans\">{props.SliderRange.name}</span>\n    <input type=\"range\" min=\"-100\" max=\"100\" step=\"1\" value={props.SliderRange.range} className=\"slider\" id={props.SliderRange.name} \n    onChange={(event) => props.draggging(event, props.SliderRange)}\n    onMouseUp = {props.mouseLeft}\n    />\n    <span>{props.SliderRange.range}</span>\n  </div>\n ): ( \n  <div className=\"slidecontainer\">\n  <span id=\"trans\">{props.SliderRange.name}</span>\n  <input type=\"range\" min=\"0\" max=\"100\" step=\"1\" value={props.SliderRange.range} className=\"slider\" id={props.SliderRange.name} \n  onChange={(event) => props.draggging(event, props.SliderRange)}\n  onMouseUp = {props.mouseLeft}\n  />\n  <span>{props.SliderRange.range}</span>\n</div>\n)  \n}\n \nexport default slider;"]},"metadata":{},"sourceType":"module"}