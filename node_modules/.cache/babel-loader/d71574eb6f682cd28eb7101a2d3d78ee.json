{"ast":null,"code":"import _classCallCheck from \"/home/adarsh/Desktop/POC/editor/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/adarsh/Desktop/POC/editor/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/adarsh/Desktop/POC/editor/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/adarsh/Desktop/POC/editor/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/adarsh/Desktop/POC/editor/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/adarsh/Desktop/POC/editor/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/adarsh/Desktop/POC/editor/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport $ from 'jquery';\nimport 'jquery-ui/ui/widgets/draggable';\nimport DragSelect from 'dragselect';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.dragselectHandler = function () {\n      var ds = new DragSelect({\n        selectables: document.getElementsByClassName('ele-select'),\n        area: document.getElementById('canvas'),\n        onElementSelect: function onElementSelect(element) {\n          var idArray = [];\n          console.log(element);\n          idArray.push(ds.getSelection());\n\n          _this.check(idArray);\n        }\n      });\n    };\n\n    _this.check = function (idArr) {\n      console.log(idArr);\n\n      if (idArr[0].length > 1 && idArr !== 'permGroup') {\n        // unwrapAll();\n        var valTemp = idArr[0].map(function (value) {\n          return '#' + $(value).attr('id');\n        });\n        var valString = valTemp.toString();\n        $(valString).wrapAll('<div class=\"wrapped ele-select\"></div>');\n        valTemp.forEach(function (element) {\n          $(element).draggable(\"disable\");\n        });\n        $('.wrapped').draggable({\n          cursor: 'move'\n        });\n        idArray = [];\n      } else {\n        console.log(idArr);\n\n        if (idArr === 'permGroup') {\n          $('.wrapped').toggleClass('wrapped perm-wrapped');\n          var cnt = $('.perm-wrapped');\n          cnt.each(function (i, el) {\n            $(el).attr('id', 'perm-select' + i);\n          });\n          cnt.children().each(function (i, el) {\n            $(el).removeClass('ele-select');\n          });\n          Array.prototype.slice.call(document.querySelectorAll('.perm-wrapped')).forEach(function (wrapped) {\n            ds.addSelectables(wrapped);\n            ds.removeSelectables(wrapped.children);\n          });\n        }\n      }\n    };\n\n    console.log(props);\n    _this.check = _this.check.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      $('.text').draggable({\n        cursor: 'move'\n      });\n      this.dragselectHandler();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"canvas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"main-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text ele-select\",\n        id: \"text1\",\n        draggable: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Some text\"), React.createElement(\"div\", {\n        className: \"text ele-select\",\n        id: \"text2\",\n        draggable: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Another text\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/adarsh/Desktop/POC/editor/src/App.js"],"names":["React","Component","$","DragSelect","App","props","dragselectHandler","ds","selectables","document","getElementsByClassName","area","getElementById","onElementSelect","element","idArray","console","log","push","getSelection","check","idArr","length","valTemp","map","value","attr","valString","toString","wrapAll","forEach","draggable","cursor","toggleClass","cnt","each","i","el","children","removeClass","Array","prototype","slice","call","querySelectorAll","wrapped","addSelectables","removeSelectables","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport $ from 'jquery'\nimport 'jquery-ui/ui/widgets/draggable';\nimport DragSelect from 'dragselect'\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    console.log(props)\n   this.check = this.check.bind(this)\n    \n  }\n  componentDidMount(){\n    $('.text').draggable({\n      cursor: 'move'\n    })\n    this.dragselectHandler();\n  }\ndragselectHandler = () =>{\n  var ds = new DragSelect({\n    selectables: document.getElementsByClassName('ele-select'),\n    area: document.getElementById('canvas'),\n    onElementSelect:  (element) => {\n      var idArray = [];\n        console.log(element)\n        idArray.push(ds.getSelection())\n       this.check(idArray)\n    }\n});\n}\n  check = (idArr) => {\n    console.log(idArr)\n    if (idArr[0].length > 1 && idArr !== 'permGroup') {\n        // unwrapAll();\n        var valTemp = idArr[0].map(value => {\n            return '#' + $(value).attr('id')\n        })\n        var valString = valTemp.toString();\n        $(valString).wrapAll('<div class=\"wrapped ele-select\"></div>');\n        valTemp.forEach(element => {\n            $(element).draggable(\"disable\");\n        });\n        $('.wrapped').draggable({\n            cursor: 'move'\n        });\n        idArray = []\n    }\n    else {\n        console.log(idArr)\n        if (idArr === 'permGroup') {\n            $('.wrapped').toggleClass('wrapped perm-wrapped');\n            var cnt = $('.perm-wrapped');\n            cnt.each((i, el) => {\n                $(el).attr('id', 'perm-select'+i)\n            })\n           cnt.children().each((i, el) => {\n              $(el).removeClass('ele-select')\n           })\n           Array.prototype.slice.call(document.querySelectorAll('.perm-wrapped')).forEach(wrapped => {\n            ds.addSelectables(wrapped)\n            ds.removeSelectables(wrapped.children);\n            });\n        }\n    }\n  }\n  render() {\n    return (\n      <div id='canvas'>\n        <div className=\"main-container\">\n          <div className=\"text ele-select\" id='text1' draggable=\"true\">Some text</div>\n          <div className=\"text ele-select\" id='text2' draggable=\"true\">Another text</div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}