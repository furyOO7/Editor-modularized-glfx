{"ast":null,"code":"import _toConsumableArray from \"/home/adarsh/Desktop/POC/Final/new/editor-continue-position-modularized_GLFX.js/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/adarsh/Desktop/POC/Final/new/editor-continue-position-modularized_GLFX.js/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/adarsh/Desktop/POC/Final/new/editor-continue-position-modularized_GLFX.js/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/adarsh/Desktop/POC/Final/new/editor-continue-position-modularized_GLFX.js/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/adarsh/Desktop/POC/Final/new/editor-continue-position-modularized_GLFX.js/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/adarsh/Desktop/POC/Final/new/editor-continue-position-modularized_GLFX.js/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/adarsh/Desktop/POC/Final/new/editor-continue-position-modularized_GLFX.js/src/components/Adjust/Adjust.js\";\nimport React, { Component } from \"react\";\nimport \"./Adjust.css\";\nimport Slider from \"../slider/slider\";\nimport $ from \"jquery\";\n\nvar Adjust =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Adjust, _Component);\n\n  function Adjust(props) {\n    var _this;\n\n    _classCallCheck(this, Adjust);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Adjust).call(this, props));\n\n    _this.slidderChangeHandler = function (event, element) {\n      // event.persist();\n      var adjust = _toConsumableArray(_this.state.adjust);\n\n      adjust.map(function (el) {\n        if (el.name === element.name) {\n          el.range = event.target.value;\n        }\n      });\n      adjust = _toConsumableArray(_this.state.adjust);\n\n      _this.setState({\n        adjust: adjust,\n        changedElement: element\n      }, function () {\n        _this.applyFilter();\n      });\n    };\n\n    _this.applyFilter = function () {\n      console.log(\"filter\", _this.props.selected.canvaselement);\n    };\n\n    _this.resetHandler = function () {\n      var image = _this.props.selected.canvaselement;\n      var imgId = '#' + image.attr('id');\n\n      var adjust = _toConsumableArray(_this.state.adjust);\n\n      console.log(adjust);\n      adjust.map(function (el) {\n        el.range = 0;\n      });\n\n      _this.setState({\n        adjust: adjust\n      }, function () {\n        window.caman(imgId, function () {\n          this.reset();\n        });\n      });\n    };\n\n    console.log(_this.props);\n    _this.applyFilter = _this.applyFilter.bind(window);\n    _this.texture = _this.props.canvas.texture(_this.props.selected.element[0]);\n    _this.state = {\n      adjust: [{\n        name: \"brightness\",\n        range: 0\n      }, {\n        name: \"contrast\",\n        range: 0\n      }, {\n        name: \"saturation\",\n        range: 0\n      }, {\n        name: \"vibrance\",\n        range: 0\n      }, {\n        name: \"exposure\",\n        range: 0\n      }, {\n        name: \"hue\",\n        range: 0\n      }, {\n        name: \"sepia\",\n        range: 0\n        /* ,\n        {\n         name: \"gamma\",\n         range: 0\n        } */\n\n      }, {\n        name: \"noise\",\n        range: 0\n      }, {\n        name: \"sharpen\",\n        range: 0\n        /* ,\n        {\n         name: \"stackBlur\",\n         range: 0\n        } */\n\n      }],\n      changedElement: null\n    };\n    return _this;\n  }\n\n  _createClass(Adjust, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var slider = this.state.adjust.map(function (element, i) {\n        if (element.name === 'brightness' || element.name === 'contrast' || element.name === 'saturation' || element.name === 'vibrance' || element.name === 'exposure') {\n          return React.createElement(Slider, {\n            SliderRange: element,\n            draggged: function draggged(event, element) {\n              return _this2.slidderChangeHandler(event, element);\n            },\n            min: \"-100\",\n            max: \"100\",\n            step: \"1\",\n            slidertype: element.name,\n            key: element.name + i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          });\n        } else {\n          return React.createElement(Slider, {\n            SliderRange: element,\n            draggged: function draggged(event, element) {\n              return _this2.slidderChangeHandler(event, element);\n            },\n            min: \"0\",\n            max: \"100\",\n            step: \"1\",\n            slidertype: element.name,\n            key: element.name + i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          });\n        }\n      });\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"adjust-main-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, slider), React.createElement(\"button\", {\n        onClick: this.resetHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Reset\"));\n    }\n  }]);\n\n  return Adjust;\n}(Component);\n\nexport default Adjust;","map":{"version":3,"sources":["/home/adarsh/Desktop/POC/Final/new/editor-continue-position-modularized_GLFX.js/src/components/Adjust/Adjust.js"],"names":["React","Component","Slider","$","Adjust","props","slidderChangeHandler","event","element","adjust","state","map","el","name","range","target","value","setState","changedElement","applyFilter","console","log","selected","canvaselement","resetHandler","image","imgId","attr","window","caman","reset","bind","texture","canvas","slider","i"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Adjust.css\";\nimport Slider from \"../slider/slider\";\nimport $ from \"jquery\";\n\n\n\nclass Adjust extends Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props);\n    this.applyFilter = this.applyFilter.bind(window)\n    this.texture =  this.props.canvas.texture(this.props.selected.element[0]);\n    \n    this.state = {\n      adjust: [\n        {\n          name: \"brightness\",\n          range: 0\n        },\n        {\n          name: \"contrast\",\n          range: 0\n        },\n        {\n          name: \"saturation\",\n          range: 0\n        },\n        {\n          name: \"vibrance\",\n          range: 0\n        },\n        {\n          name: \"exposure\",\n          range: 0\n        },\n        {\n          name: \"hue\",\n          range: 0\n        },\n        {\n          name: \"sepia\",\n          range: 0\n        }/* ,\n        {\n          name: \"gamma\",\n          range: 0\n        } */,\n        {\n          name: \"noise\",\n          range: 0\n        },\n        {\n          name: \"sharpen\",\n          range: 0\n        }/* ,\n        {\n          name: \"stackBlur\",\n          range: 0\n        } */\n      ],\n      changedElement: null\n    };\n  }\n  slidderChangeHandler = (event, element) => {\n    // event.persist();\n    let adjust = [...this.state.adjust];\n    adjust.map(el => {\n      if (el.name === element.name) {\n        el.range = event.target.value;\n      }\n    });\n    adjust =  [...this.state.adjust]\n    this.setState({ adjust: adjust, changedElement: element }, () => {\n     this.applyFilter();\n     \n    });\n};\n\napplyFilter = () => {\n console.log(\"filter\", this.props.selected.canvaselement);\n \n}\n\nresetHandler = () => {\n  let image = this.props.selected.canvaselement\n  let  imgId = '#' + image.attr('id');\n  let adjust = [...this.state.adjust];\n    console.log(adjust)\n    adjust.map(el => {\n        el.range = 0\n    });\n    this.setState({\n      adjust: adjust\n    },() => {\n      window.caman(imgId, function() { \n        this.reset()\n      })\n    })\n  \n}\n\n  render() {\n    let slider = this.state.adjust.map((element, i) => {\n      if(element.name === 'brightness' ||  element.name === 'contrast' || element.name === 'saturation' ||  \n      element.name === 'vibrance' ||  element.name === 'exposure'){\n        return (\n          <Slider\n            SliderRange={element}\n            draggged={(event, element) =>\n              this.slidderChangeHandler(event, element)\n            }\n            min=\"-100\" max=\"100\" step='1' slidertype={element.name}\n            key={element.name + i}\n         \n          />\n        );\n      }else{\n        return (\n          <Slider\n            SliderRange={element}\n            draggged={(event, element) =>\n              this.slidderChangeHandler(event, element)\n            }\n            min=\"0\" max=\"100\" step='1' slidertype={element.name}\n            key={element.name + i}\n          />\n        );\n      }\n    \n    });\n    return (\n      <React.Fragment>\n    <div className=\"adjust-main-container\">{slider}</div>\n    <button onClick={this.resetHandler}>Reset</button>\n    </React.Fragment>\n    )\n  }\n}\n\n\nexport default Adjust;\n"]},"metadata":{},"sourceType":"module"}