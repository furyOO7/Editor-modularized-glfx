{"ast":null,"code":"import _classCallCheck from \"/home/adarsh/Desktop/POC/editor/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/adarsh/Desktop/POC/editor/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/adarsh/Desktop/POC/editor/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/adarsh/Desktop/POC/editor/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/adarsh/Desktop/POC/editor/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/adarsh/Desktop/POC/editor/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport $ from 'jquery';\nimport 'jquery-ui/ui/widgets/draggable';\nimport DragSelect from 'dragselect';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.unwrapAll = function () {\n      console.log(\"unwrapped\");\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      $('#canvas').on('mousedown', '.main-container', function (e) {\n        if ($(e.target).attr('class').indexOf('main-container') > -1) {\n          this.unwrapAll();\n          ds.start();\n        } else {\n          idArray = [];\n          ds.stop();\n          ds.break();\n        }\n      });\n      $('#canvas').on('mouseup', function (e) {\n        idArray = [];\n        ds.stop();\n        ds.start();\n      });\n      $('.text').draggable({\n        cursor: 'move'\n      });\n      var ds = new DragSelect({\n        selectables: document.getElementsByClassName('ele-select'),\n        area: document.getElementById('canvas'),\n        onElementSelect: function onElementSelect(element) {\n          var idArray = [];\n          console.log(element);\n          idArray.push(ds.getSelection());\n          console.log(idArray); // check(idArray)\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"canvas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"main-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text ele-select\",\n        id: \"text1\",\n        draggable: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Some text\"), React.createElement(\"div\", {\n        className: \"text ele-select\",\n        id: \"text2\",\n        draggable: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Another text\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/adarsh/Desktop/POC/editor/src/App.js"],"names":["React","Component","$","DragSelect","App","unwrapAll","console","log","on","e","target","attr","indexOf","ds","start","idArray","stop","break","draggable","cursor","selectables","document","getElementsByClassName","area","getElementById","onElementSelect","element","push","getSelection"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,gCAAP;AACA,OAAOC,UAAP,MAAuB,YAAvB;;IAGMC,G;;;;;;;;;;;;;;;;;;UAmCLC,S,GAAY,YAAM;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,K;;;;;;;wCApCmB;AACjBL,MAAAA,CAAC,CAAC,SAAD,CAAD,CAAaM,EAAb,CAAgB,WAAhB,EAA6B,iBAA7B,EAAgD,UAAUC,CAAV,EAAa;AAC3D,YAAIP,CAAC,CAACO,CAAC,CAACC,MAAH,CAAD,CAAYC,IAAZ,CAAiB,OAAjB,EAA0BC,OAA1B,CAAkC,gBAAlC,IAAsD,CAAC,CAA3D,EAA8D;AAC1D,eAAKP,SAAL;AACAQ,UAAAA,EAAE,CAACC,KAAH;AAEH,SAJD,MAIO;AACHC,UAAAA,OAAO,GAAG,EAAV;AACAF,UAAAA,EAAE,CAACG,IAAH;AACAH,UAAAA,EAAE,CAACI,KAAH;AACH;AACJ,OAVC;AAYFf,MAAAA,CAAC,CAAC,SAAD,CAAD,CAAaM,EAAb,CAAgB,SAAhB,EAA2B,UAAUC,CAAV,EAAa;AACtCM,QAAAA,OAAO,GAAG,EAAV;AACAF,QAAAA,EAAE,CAACG,IAAH;AACAH,QAAAA,EAAE,CAACC,KAAH;AACH,OAJC;AAMEZ,MAAAA,CAAC,CAAC,OAAD,CAAD,CAAWgB,SAAX,CAAqB;AACnBC,QAAAA,MAAM,EAAE;AADW,OAArB;AAGA,UAAIN,EAAE,GAAG,IAAIV,UAAJ,CAAe;AACtBiB,QAAAA,WAAW,EAAEC,QAAQ,CAACC,sBAAT,CAAgC,YAAhC,CADS;AAEtBC,QAAAA,IAAI,EAAEF,QAAQ,CAACG,cAAT,CAAwB,QAAxB,CAFgB;AAGtBC,QAAAA,eAAe,EAAE,yBAAUC,OAAV,EAAmB;AAClC,cAAIX,OAAO,GAAG,EAAd;AACET,UAAAA,OAAO,CAACC,GAAR,CAAYmB,OAAZ;AACDX,UAAAA,OAAO,CAACY,IAAR,CAAad,EAAE,CAACe,YAAH,EAAb;AACCtB,UAAAA,OAAO,CAACC,GAAR,CAAYQ,OAAZ,EAJgC,CAKhC;AACH;AATqB,OAAf,CAAT;AAWD;;;6BAIQ;AACP,aACE;AAAK,QAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAiC,QAAA,EAAE,EAAC,OAApC;AAA4C,QAAA,SAAS,EAAC,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,EAEA;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAiC,QAAA,EAAE,EAAC,OAApC;AAA4C,QAAA,SAAS,EAAC,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFA,CADF,CADF;AAQD;;;;EA/Ced,S;;AAkDlB,eAAeG,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport $ from 'jquery'\nimport 'jquery-ui/ui/widgets/draggable';\nimport DragSelect from 'dragselect'\n\n\nclass App extends Component {\n  componentDidMount(){\n    $('#canvas').on('mousedown', '.main-container', function (e) {\n      if ($(e.target).attr('class').indexOf('main-container') > -1) {\n          this.unwrapAll()\n          ds.start()\n  \n      } else {\n          idArray = []\n          ds.stop();\n          ds.break();\n      }\n  });\n\n  $('#canvas').on('mouseup', function (e) {\n    idArray = []\n    ds.stop();\n    ds.start()\n})\n\n    $('.text').draggable({\n      cursor: 'move'\n    })\n    var ds = new DragSelect({\n      selectables: document.getElementsByClassName('ele-select'),\n      area: document.getElementById('canvas'),\n      onElementSelect: function (element) {\n        var idArray = [];\n          console.log(element)\n         idArray.push(ds.getSelection())\n          console.log(idArray)\n          // check(idArray)\n      }\n  });\n  }\n unwrapAll = () => {\n   console.log(\"unwrapped\")\n }\n  render() {\n    return (\n      <div id='canvas'>\n        <div className=\"main-container\">\n        <div className=\"text ele-select\" id='text1' draggable=\"true\">Some text</div>\n        <div className=\"text ele-select\" id='text2' draggable=\"true\">Another text</div>\n    </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}