{"ast":null,"code":"// Generated by CoffeeScript 1.6.2\n(function () {\n  var $,\n      Analyze,\n      Blender,\n      Calculate,\n      Caman,\n      CamanParser,\n      Canvas,\n      Convert,\n      Event,\n      Fiber,\n      Filter,\n      IO,\n      Image,\n      Layer,\n      Log,\n      Module,\n      Pixel,\n      Plugin,\n      Renderer,\n      Root,\n      Store,\n      Util,\n      fs,\n      moduleKeywords,\n      slice,\n      __indexOf = [].indexOf || function (item) {\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (i in this && this[i] === item) return i;\n    }\n\n    return -1;\n  },\n      __slice = [].slice,\n      __hasProp = {}.hasOwnProperty,\n      __bind = function __bind(fn, me) {\n    return function () {\n      return fn.apply(me, arguments);\n    };\n  },\n      __extends = function __extends(child, parent) {\n    for (var key in parent) {\n      if (__hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  };\n\n  moduleKeywords = ['extended', 'included'];\n\n  Module = function () {\n    function Module() {}\n\n    Module[\"extends\"] = function (obj) {\n      var key, value, _ref;\n\n      for (key in obj) {\n        value = obj[key];\n\n        if (__indexOf.call(moduleKeywords, key) < 0) {\n          this[key] = value;\n        }\n      }\n\n      if ((_ref = obj.extended) != null) {\n        _ref.apply(this);\n      }\n\n      return this;\n    };\n\n    Module.includes = function (obj) {\n      var key, value, _ref;\n\n      for (key in obj) {\n        value = obj[key];\n\n        if (__indexOf.call(moduleKeywords, key) < 0) {\n          this.prototype[key] = value;\n        }\n      }\n\n      if ((_ref = obj.included) != null) {\n        _ref.apply(this);\n      }\n\n      return this;\n    };\n\n    Module.delegate = function () {\n      var args, source, target, _i, _len, _results;\n\n      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      target = args.pop();\n      _results = [];\n\n      for (_i = 0, _len = args.length; _i < _len; _i++) {\n        source = args[_i];\n\n        _results.push(this.prototype[source] = target.prototype[source]);\n      }\n\n      return _results;\n    };\n\n    Module.aliasFunction = function (to, from) {\n      var _this = this;\n\n      return this.prototype[to] = function () {\n        var args;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        return _this.prototype[from].apply(_this, args);\n      };\n    };\n\n    Module.aliasProperty = function (to, from) {\n      return Object.defineProperty(this.prototype, to, {\n        get: function get() {\n          return this[from];\n        },\n        set: function set(val) {\n          return this[from] = val;\n        }\n      });\n    };\n\n    Module.included = function (func) {\n      return func.call(this, this.prototype);\n    };\n\n    return Module;\n  }();\n\n  slice = Array.prototype.slice;\n\n  $ = function $(sel, root) {\n    if (root == null) {\n      root = document;\n    }\n\n    if (typeof sel === \"object\" || typeof exports !== \"undefined\" && exports !== null) {\n      return sel;\n    }\n\n    return root.querySelector(sel);\n  };\n\n  Util = function () {\n    function Util() {}\n\n    Util.uniqid = function () {\n      var id;\n      id = 0;\n      return {\n        get: function get() {\n          return id++;\n        }\n      };\n    }();\n\n    Util.extend = function () {\n      var copy, dest, obj, prop, src, _i, _len;\n\n      obj = arguments[0], src = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      dest = obj;\n\n      for (_i = 0, _len = src.length; _i < _len; _i++) {\n        copy = src[_i];\n\n        for (prop in copy) {\n          if (!__hasProp.call(copy, prop)) continue;\n          dest[prop] = copy[prop];\n        }\n      }\n\n      return dest;\n    };\n\n    Util.clampRGB = function (val) {\n      if (val < 0) {\n        return 0;\n      }\n\n      if (val > 255) {\n        return 255;\n      }\n\n      return val;\n    };\n\n    Util.copyAttributes = function (from, to, opts) {\n      var attr, _i, _len, _ref, _ref1, _results;\n\n      if (opts == null) {\n        opts = {};\n      }\n\n      _ref = from.attributes;\n      _results = [];\n\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        attr = _ref[_i];\n\n        if (opts.except != null && (_ref1 = attr.nodeName, __indexOf.call(opts.except, _ref1) >= 0)) {\n          continue;\n        }\n\n        _results.push(to.setAttribute(attr.nodeName, attr.nodeValue));\n      }\n\n      return _results;\n    };\n\n    Util.dataArray = function (length) {\n      if (length == null) {\n        length = 0;\n      }\n\n      if (Caman.NodeJS || window.Uint8Array != null) {\n        return new Uint8Array(length);\n      }\n\n      return new Array(length);\n    };\n\n    return Util;\n  }();\n\n  if (typeof exports !== \"undefined\" && exports !== null) {\n    Root = exports;\n    Canvas = require('canvas');\n    Image = Canvas.Image;\n    Fiber = require('fibers');\n    fs = require('fs');\n  } else {\n    Root = window;\n  }\n\n  Caman = function (_super) {\n    __extends(Caman, _super);\n\n    Caman.version = {\n      release: \"4.1.2\",\n      date: \"7/27/2013\"\n    };\n    Caman.DEBUG = false;\n    Caman.allowRevert = true;\n    Caman.crossOrigin = \"anonymous\";\n    Caman.remoteProxy = \"\";\n    Caman.proxyParam = \"camanProxyUrl\";\n    Caman.NodeJS = typeof exports !== \"undefined\" && exports !== null;\n    Caman.autoload = !Caman.NodeJS;\n\n    Caman.toString = function () {\n      return \"Version \" + Caman.version.release + \", Released \" + Caman.version.date;\n    };\n\n    Caman.getAttrId = function (canvas) {\n      if (Caman.NodeJS) {\n        return true;\n      }\n\n      if (typeof canvas === \"string\") {\n        canvas = $(canvas);\n      }\n\n      if (!(canvas != null && canvas.getAttribute != null)) {\n        return null;\n      }\n\n      return canvas.getAttribute('data-caman-id');\n    };\n\n    function Caman() {\n      this.nodeFileReady = __bind(this.nodeFileReady, this);\n\n      var args,\n          callback,\n          id,\n          _this = this;\n\n      if (arguments.length === 0) {\n        throw \"Invalid arguments\";\n      }\n\n      if (this instanceof Caman) {\n        this.finishInit = this.finishInit.bind(this);\n        this.imageLoaded = this.imageLoaded.bind(this);\n        args = arguments[0];\n\n        if (!Caman.NodeJS) {\n          id = parseInt(Caman.getAttrId(args[0]), 10);\n          callback = typeof args[1] === \"function\" ? args[1] : typeof args[2] === \"function\" ? args[2] : function () {};\n\n          if (!isNaN(id) && Store.has(id)) {\n            return Store.execute(id, callback);\n          }\n        }\n\n        this.id = Util.uniqid.get();\n        this.initializedPixelData = this.originalPixelData = null;\n        this.cropCoordinates = {\n          x: 0,\n          y: 0\n        };\n        this.cropped = false;\n        this.resized = false;\n        this.pixelStack = [];\n        this.layerStack = [];\n        this.canvasQueue = [];\n        this.currentLayer = null;\n        this.scaled = false;\n        this.analyze = new Analyze(this);\n        this.renderer = new Renderer(this);\n        this.domIsLoaded(function () {\n          _this.parseArguments(args);\n\n          return _this.setup();\n        });\n        return this;\n      } else {\n        return new Caman(arguments);\n      }\n    }\n\n    Caman.prototype.domIsLoaded = function (cb) {\n      var listener,\n          _this = this;\n\n      if (Caman.NodeJS) {\n        return setTimeout(function () {\n          return cb.call(_this);\n        }, 0);\n      } else {\n        if (document.readyState === \"complete\") {\n          Log.debug(\"DOM initialized\");\n          return setTimeout(function () {\n            return cb.call(_this);\n          }, 0);\n        } else {\n          listener = function listener() {\n            if (document.readyState === \"complete\") {\n              Log.debug(\"DOM initialized\");\n              return cb.call(_this);\n            }\n          };\n\n          return document.addEventListener(\"readystatechange\", listener, false);\n        }\n      }\n    };\n\n    Caman.prototype.parseArguments = function (args) {\n      var key, val, _ref, _results;\n\n      if (args.length === 0) {\n        throw \"Invalid arguments given\";\n      }\n\n      this.initObj = null;\n      this.initType = null;\n      this.imageUrl = null;\n\n      this.callback = function () {};\n\n      this.setInitObject(args[0]);\n\n      if (args.length === 1) {\n        return;\n      }\n\n      switch (typeof args[1]) {\n        case \"string\":\n          this.imageUrl = args[1];\n          break;\n\n        case \"function\":\n          this.callback = args[1];\n      }\n\n      if (args.length === 2) {\n        return;\n      }\n\n      this.callback = args[2];\n\n      if (args.length === 4) {\n        _ref = args[4];\n        _results = [];\n\n        for (key in _ref) {\n          if (!__hasProp.call(_ref, key)) continue;\n          val = _ref[key];\n\n          _results.push(this.options[key] = val);\n        }\n\n        return _results;\n      }\n    };\n\n    Caman.prototype.setInitObject = function (obj) {\n      if (Caman.NodeJS) {\n        this.initObj = obj;\n        this.initType = 'node';\n        return;\n      }\n\n      if (typeof obj === \"object\") {\n        this.initObj = obj;\n      } else {\n        this.initObj = $(obj);\n      }\n\n      if (this.initObj == null) {\n        throw \"Could not find image or canvas for initialization.\";\n      }\n\n      return this.initType = this.initObj.nodeName.toLowerCase();\n    };\n\n    Caman.prototype.setup = function () {\n      switch (this.initType) {\n        case \"node\":\n          return this.initNode();\n\n        case \"img\":\n          return this.initImage();\n\n        case \"canvas\":\n          return this.initCanvas();\n      }\n    };\n\n    Caman.prototype.initNode = function () {\n      Log.debug(\"Initializing for NodeJS\");\n\n      if (typeof this.initObj === \"string\") {\n        return fs.readFile(this.initObj, this.nodeFileReady);\n      } else {\n        return this.nodeFileReady(null, this.initObj);\n      }\n    };\n\n    Caman.prototype.nodeFileReady = function (err, data) {\n      if (err) {\n        throw err;\n      }\n\n      this.image = new Image();\n      this.image.src = data;\n      Log.debug(\"Image loaded. Width = \" + this.imageWidth() + \", Height = \" + this.imageHeight());\n      this.canvas = new Canvas(this.imageWidth(), this.imageHeight());\n      return this.finishInit();\n    };\n\n    Caman.prototype.initImage = function () {\n      this.image = this.initObj;\n      this.canvas = document.createElement('canvas');\n      this.context = this.canvas.getContext('2d');\n      Util.copyAttributes(this.image, this.canvas, {\n        except: ['src']\n      });\n      this.image.parentNode.replaceChild(this.canvas, this.image);\n      this.imageAdjustments();\n      return this.waitForImageLoaded();\n    };\n\n    Caman.prototype.initCanvas = function () {\n      this.canvas = this.initObj;\n      this.context = this.canvas.getContext('2d');\n\n      if (this.imageUrl != null) {\n        this.image = document.createElement('img');\n        this.image.src = this.imageUrl;\n        this.imageAdjustments();\n        return this.waitForImageLoaded();\n      } else {\n        return this.finishInit();\n      }\n    };\n\n    Caman.prototype.imageAdjustments = function () {\n      if (this.needsHiDPISwap()) {\n        Log.debug(this.image.src, \"->\", this.hiDPIReplacement());\n        this.swapped = true;\n        this.image.src = this.hiDPIReplacement();\n      }\n\n      if (IO.isRemote(this.image)) {\n        this.image.src = IO.proxyUrl(this.image.src);\n        return Log.debug(\"Remote image detected, using URL = \" + this.image.src);\n      }\n    };\n\n    Caman.prototype.waitForImageLoaded = function () {\n      if (this.isImageLoaded()) {\n        return this.imageLoaded();\n      } else {\n        return this.image.onload = this.imageLoaded;\n      }\n    };\n\n    Caman.prototype.isImageLoaded = function () {\n      if (!this.image.complete) {\n        return false;\n      }\n\n      if (this.image.naturalWidth != null && this.image.naturalWidth === 0) {\n        return false;\n      }\n\n      return true;\n    };\n\n    Caman.prototype.imageWidth = function () {\n      return this.image.width || this.image.naturalWidth;\n    };\n\n    Caman.prototype.imageHeight = function () {\n      return this.image.height || this.image.naturalHeight;\n    };\n\n    Caman.prototype.imageLoaded = function () {\n      Log.debug(\"Image loaded. Width = \" + this.imageWidth() + \", Height = \" + this.imageHeight());\n\n      if (this.swapped) {\n        this.canvas.width = this.imageWidth() / this.hiDPIRatio();\n        this.canvas.height = this.imageHeight() / this.hiDPIRatio();\n      } else {\n        this.canvas.width = this.imageWidth();\n        this.canvas.height = this.imageHeight();\n      }\n\n      return this.finishInit();\n    };\n\n    Caman.prototype.finishInit = function () {\n      var i, pixel, _i, _len, _ref;\n\n      if (this.context == null) {\n        this.context = this.canvas.getContext('2d');\n      }\n\n      this.originalWidth = this.preScaledWidth = this.width = this.canvas.width;\n      this.originalHeight = this.preScaledHeight = this.height = this.canvas.height;\n      this.hiDPIAdjustments();\n\n      if (!this.hasId()) {\n        this.assignId();\n      }\n\n      if (this.image != null) {\n        this.context.drawImage(this.image, 0, 0, this.imageWidth(), this.imageHeight(), 0, 0, this.preScaledWidth, this.preScaledHeight);\n      }\n\n      this.imageData = this.context.getImageData(0, 0, this.canvas.width, this.canvas.height);\n      this.pixelData = this.imageData.data;\n\n      if (Caman.allowRevert) {\n        this.initializedPixelData = Util.dataArray(this.pixelData.length);\n        this.originalPixelData = Util.dataArray(this.pixelData.length);\n        _ref = this.pixelData;\n\n        for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n          pixel = _ref[i];\n          this.initializedPixelData[i] = pixel;\n          this.originalPixelData[i] = pixel;\n        }\n      }\n\n      this.dimensions = {\n        width: this.canvas.width,\n        height: this.canvas.height\n      };\n\n      if (!Caman.NodeJS) {\n        Store.put(this.id, this);\n      }\n\n      this.callback.call(this, this);\n      return this.callback = function () {};\n    };\n\n    Caman.prototype.reloadCanvasData = function () {\n      this.imageData = this.context.getImageData(0, 0, this.canvas.width, this.canvas.height);\n      return this.pixelData = this.imageData.data;\n    };\n\n    Caman.prototype.resetOriginalPixelData = function () {\n      var i, pixel, _i, _len, _ref, _results;\n\n      if (!Caman.allowRevert) {\n        throw \"Revert disabled\";\n      }\n\n      this.originalPixelData = Util.dataArray(this.pixelData.length);\n      _ref = this.pixelData;\n      _results = [];\n\n      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n        pixel = _ref[i];\n\n        _results.push(this.originalPixelData[i] = pixel);\n      }\n\n      return _results;\n    };\n\n    Caman.prototype.hasId = function () {\n      return Caman.getAttrId(this.canvas) != null;\n    };\n\n    Caman.prototype.assignId = function () {\n      if (Caman.NodeJS || this.canvas.getAttribute('data-caman-id')) {\n        return;\n      }\n\n      return this.canvas.setAttribute('data-caman-id', this.id);\n    };\n\n    Caman.prototype.hiDPIDisabled = function () {\n      return this.canvas.getAttribute('data-caman-hidpi-disabled') !== null;\n    };\n\n    Caman.prototype.hiDPIAdjustments = function () {\n      var ratio;\n\n      if (Caman.NodeJS || !this.needsHiDPISwap()) {\n        return;\n      }\n\n      ratio = this.hiDPIRatio();\n\n      if (ratio !== 1) {\n        Log.debug(\"HiDPI ratio = \" + ratio);\n        this.scaled = true;\n        this.preScaledWidth = this.canvas.width;\n        this.preScaledHeight = this.canvas.height;\n        this.canvas.width = this.preScaledWidth * ratio;\n        this.canvas.height = this.preScaledHeight * ratio;\n        this.canvas.style.width = \"\" + this.preScaledWidth + \"px\";\n        this.canvas.style.height = \"\" + this.preScaledHeight + \"px\";\n        this.context.scale(ratio, ratio);\n        this.width = this.originalWidth = this.canvas.width;\n        return this.height = this.originalHeight = this.canvas.height;\n      }\n    };\n\n    Caman.prototype.hiDPIRatio = function () {\n      var backingStoreRatio, devicePixelRatio;\n      devicePixelRatio = window.devicePixelRatio || 1;\n      backingStoreRatio = this.context.webkitBackingStorePixelRatio || this.context.mozBackingStorePixelRatio || this.context.msBackingStorePixelRatio || this.context.oBackingStorePixelRatio || this.context.backingStorePixelRatio || 1;\n      return devicePixelRatio / backingStoreRatio;\n    };\n\n    Caman.prototype.hiDPICapable = function () {\n      return window.devicePixelRatio != null && window.devicePixelRatio !== 1;\n    };\n\n    Caman.prototype.needsHiDPISwap = function () {\n      if (this.hiDPIDisabled() || !this.hiDPICapable()) {\n        return false;\n      }\n\n      return this.hiDPIReplacement() !== null;\n    };\n\n    Caman.prototype.hiDPIReplacement = function () {\n      if (this.image == null) {\n        return null;\n      }\n\n      return this.image.getAttribute('data-caman-hidpi');\n    };\n\n    Caman.prototype.replaceCanvas = function (newCanvas) {\n      var oldCanvas;\n      oldCanvas = this.canvas;\n      this.canvas = newCanvas;\n      this.context = this.canvas.getContext('2d');\n\n      if (!Caman.NodeJS) {\n        oldCanvas.parentNode.replaceChild(this.canvas, oldCanvas);\n      }\n\n      this.width = this.canvas.width;\n      this.height = this.canvas.height;\n      this.reloadCanvasData();\n      return this.dimensions = {\n        width: this.canvas.width,\n        height: this.canvas.height\n      };\n    };\n\n    Caman.prototype.render = function (callback) {\n      var _this = this;\n\n      if (callback == null) {\n        callback = function callback() {};\n      }\n\n      Event.trigger(this, \"renderStart\");\n      return this.renderer.execute(function () {\n        _this.context.putImageData(_this.imageData, 0, 0);\n\n        return callback.call(_this);\n      });\n    };\n\n    Caman.prototype.revert = function (updateContext) {\n      var i, pixel, _i, _len, _ref;\n\n      if (updateContext == null) {\n        updateContext = true;\n      }\n\n      if (!Caman.allowRevert) {\n        throw \"Revert disabled\";\n      }\n\n      _ref = this.originalVisiblePixels();\n\n      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n        pixel = _ref[i];\n        this.pixelData[i] = pixel;\n      }\n\n      if (updateContext) {\n        return this.context.putImageData(this.imageData, 0, 0);\n      }\n    };\n\n    Caman.prototype.reset = function () {\n      var canvas, ctx, i, imageData, pixel, pixelData, _i, _len, _ref;\n\n      canvas = document.createElement('canvas');\n      Util.copyAttributes(this.canvas, canvas);\n      canvas.width = this.originalWidth;\n      canvas.height = this.originalHeight;\n      ctx = canvas.getContext('2d');\n      imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      pixelData = imageData.data;\n      _ref = this.initializedPixelData;\n\n      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n        pixel = _ref[i];\n        pixelData[i] = pixel;\n      }\n\n      ctx.putImageData(imageData, 0, 0);\n      this.cropCoordinates = {\n        x: 0,\n        y: 0\n      };\n      this.resized = false;\n      return this.replaceCanvas(canvas);\n    };\n\n    Caman.prototype.originalVisiblePixels = function () {\n      var canvas, coord, ctx, endX, endY, i, imageData, pixel, pixelData, pixels, scaledCanvas, startX, startY, width, _i, _j, _len, _ref, _ref1, _ref2, _ref3;\n\n      if (!Caman.allowRevert) {\n        throw \"Revert disabled\";\n      }\n\n      pixels = [];\n      startX = this.cropCoordinates.x;\n      endX = startX + this.width;\n      startY = this.cropCoordinates.y;\n      endY = startY + this.height;\n\n      if (this.resized) {\n        canvas = document.createElement('canvas');\n        canvas.width = this.originalWidth;\n        canvas.height = this.originalHeight;\n        ctx = canvas.getContext('2d');\n        imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        pixelData = imageData.data;\n        _ref = this.originalPixelData;\n\n        for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n          pixel = _ref[i];\n          pixelData[i] = pixel;\n        }\n\n        ctx.putImageData(imageData, 0, 0);\n        scaledCanvas = document.createElement('canvas');\n        scaledCanvas.width = this.width;\n        scaledCanvas.height = this.height;\n        ctx = scaledCanvas.getContext('2d');\n        ctx.drawImage(canvas, 0, 0, this.originalWidth, this.originalHeight, 0, 0, this.width, this.height);\n        pixelData = ctx.getImageData(0, 0, this.width, this.height).data;\n        width = this.width;\n      } else {\n        pixelData = this.originalPixelData;\n        width = this.originalWidth;\n      }\n\n      for (i = _j = 0, _ref1 = pixelData.length; _j < _ref1; i = _j += 4) {\n        coord = Pixel.locationToCoordinates(i, width);\n\n        if (startX <= (_ref2 = coord.x) && _ref2 < endX && startY <= (_ref3 = coord.y) && _ref3 < endY) {\n          pixels.push(pixelData[i], pixelData[i + 1], pixelData[i + 2], pixelData[i + 3]);\n        }\n      }\n\n      return pixels;\n    };\n\n    Caman.prototype.process = function (name, processFn) {\n      this.renderer.add({\n        type: Filter.Type.Single,\n        name: name,\n        processFn: processFn\n      });\n      return this;\n    };\n\n    Caman.prototype.processKernel = function (name, adjust, divisor, bias) {\n      var i, _i, _ref;\n\n      if (divisor == null) {\n        divisor = null;\n      }\n\n      if (bias == null) {\n        bias = 0;\n      }\n\n      if (divisor == null) {\n        divisor = 0;\n\n        for (i = _i = 0, _ref = adjust.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n          divisor += adjust[i];\n        }\n      }\n\n      this.renderer.add({\n        type: Filter.Type.Kernel,\n        name: name,\n        adjust: adjust,\n        divisor: divisor,\n        bias: bias\n      });\n      return this;\n    };\n\n    Caman.prototype.processPlugin = function (plugin, args) {\n      this.renderer.add({\n        type: Filter.Type.Plugin,\n        plugin: plugin,\n        args: args\n      });\n      return this;\n    };\n\n    Caman.prototype.newLayer = function (callback) {\n      var layer;\n      layer = new Layer(this);\n      this.canvasQueue.push(layer);\n      this.renderer.add({\n        type: Filter.Type.LayerDequeue\n      });\n      callback.call(layer);\n      this.renderer.add({\n        type: Filter.Type.LayerFinished\n      });\n      return this;\n    };\n\n    Caman.prototype.executeLayer = function (layer) {\n      return this.pushContext(layer);\n    };\n\n    Caman.prototype.pushContext = function (layer) {\n      this.layerStack.push(this.currentLayer);\n      this.pixelStack.push(this.pixelData);\n      this.currentLayer = layer;\n      return this.pixelData = layer.pixelData;\n    };\n\n    Caman.prototype.popContext = function () {\n      this.pixelData = this.pixelStack.pop();\n      return this.currentLayer = this.layerStack.pop();\n    };\n\n    Caman.prototype.applyCurrentLayer = function () {\n      return this.currentLayer.applyToParent();\n    };\n\n    return Caman;\n  }(Module);\n\n  Root.Caman = Caman;\n\n  Caman.Analyze = function () {\n    function Analyze(c) {\n      this.c = c;\n    }\n\n    Analyze.prototype.calculateLevels = function () {\n      var i, levels, numPixels, _i, _j, _k, _ref;\n\n      levels = {\n        r: {},\n        g: {},\n        b: {}\n      };\n\n      for (i = _i = 0; _i <= 255; i = ++_i) {\n        levels.r[i] = 0;\n        levels.g[i] = 0;\n        levels.b[i] = 0;\n      }\n\n      for (i = _j = 0, _ref = this.c.pixelData.length; _j < _ref; i = _j += 4) {\n        levels.r[this.c.pixelData[i]]++;\n        levels.g[this.c.pixelData[i + 1]]++;\n        levels.b[this.c.pixelData[i + 2]]++;\n      }\n\n      numPixels = this.c.pixelData.length / 4;\n\n      for (i = _k = 0; _k <= 255; i = ++_k) {\n        levels.r[i] /= numPixels;\n        levels.g[i] /= numPixels;\n        levels.b[i] /= numPixels;\n      }\n\n      return levels;\n    };\n\n    return Analyze;\n  }();\n\n  Analyze = Caman.Analyze;\n\n  Caman.DOMUpdated = function () {\n    var img, imgs, parser, _i, _len, _results;\n\n    imgs = document.querySelectorAll(\"img[data-caman]\");\n\n    if (!(imgs.length > 0)) {\n      return;\n    }\n\n    _results = [];\n\n    for (_i = 0, _len = imgs.length; _i < _len; _i++) {\n      img = imgs[_i];\n\n      _results.push(parser = new CamanParser(img, function () {\n        this.parse();\n        return this.execute();\n      }));\n    }\n\n    return _results;\n  };\n\n  if (Caman.autoload) {\n    (function () {\n      if (document.readyState === \"complete\") {\n        return Caman.DOMUpdated();\n      } else {\n        return document.addEventListener(\"DOMContentLoaded\", Caman.DOMUpdated, false);\n      }\n    })();\n  }\n\n  CamanParser = function () {\n    var INST_REGEX;\n    INST_REGEX = \"(\\\\w+)\\\\((.*?)\\\\)\";\n\n    function CamanParser(ele, ready) {\n      this.dataStr = ele.getAttribute('data-caman');\n      this.caman = Caman(ele, ready.bind(this));\n    }\n\n    CamanParser.prototype.parse = function () {\n      var args, e, filter, func, inst, instFunc, m, r, unparsedInstructions, _i, _len, _ref, _results;\n\n      this.ele = this.caman.canvas;\n      r = new RegExp(INST_REGEX, 'g');\n      unparsedInstructions = this.dataStr.match(r);\n\n      if (!(unparsedInstructions.length > 0)) {\n        return;\n      }\n\n      r = new RegExp(INST_REGEX);\n      _results = [];\n\n      for (_i = 0, _len = unparsedInstructions.length; _i < _len; _i++) {\n        inst = unparsedInstructions[_i];\n        _ref = inst.match(r), m = _ref[0], filter = _ref[1], args = _ref[2];\n        instFunc = new Function(\"return function() {        this.\" + filter + \"(\" + args + \");      };\");\n\n        try {\n          func = instFunc();\n\n          _results.push(func.call(this.caman));\n        } catch (_error) {\n          e = _error;\n\n          _results.push(Log.debug(e));\n        }\n      }\n\n      return _results;\n    };\n\n    CamanParser.prototype.execute = function () {\n      var ele;\n      ele = this.ele;\n      return this.caman.render(function () {\n        return ele.parentNode.replaceChild(this.toImage(), ele);\n      });\n    };\n\n    return CamanParser;\n  }();\n\n  Caman.Blender = function () {\n    function Blender() {}\n\n    Blender.blenders = {};\n\n    Blender.register = function (name, func) {\n      return this.blenders[name] = func;\n    };\n\n    Blender.execute = function (name, rgbaLayer, rgbaParent) {\n      return this.blenders[name](rgbaLayer, rgbaParent);\n    };\n\n    return Blender;\n  }();\n\n  Blender = Caman.Blender;\n\n  Caman.Calculate = function () {\n    function Calculate() {}\n\n    Calculate.distance = function (x1, y1, x2, y2) {\n      return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    };\n\n    Calculate.randomRange = function (min, max, getFloat) {\n      var rand;\n\n      if (getFloat == null) {\n        getFloat = false;\n      }\n\n      rand = min + Math.random() * (max - min);\n\n      if (getFloat) {\n        return rand.toFixed(getFloat);\n      } else {\n        return Math.round(rand);\n      }\n    };\n\n    Calculate.luminance = function (rgba) {\n      return 0.299 * rgba.r + 0.587 * rgba.g + 0.114 * rgba.b;\n    };\n\n    Calculate.bezier = function (start, ctrl1, ctrl2, end, lowBound, highBound) {\n      var Ax, Ay, Bx, By, Cx, Cy, bezier, curveX, curveY, i, j, leftCoord, rightCoord, t, x0, x1, x2, x3, y0, y1, y2, y3, _i, _j, _k, _ref, _ref1;\n\n      x0 = start[0];\n      y0 = start[1];\n      x1 = ctrl1[0];\n      y1 = ctrl1[1];\n      x2 = ctrl2[0];\n      y2 = ctrl2[1];\n      x3 = end[0];\n      y3 = end[1];\n      bezier = {};\n      Cx = parseInt(3 * (x1 - x0), 10);\n      Bx = 3 * (x2 - x1) - Cx;\n      Ax = x3 - x0 - Cx - Bx;\n      Cy = 3 * (y1 - y0);\n      By = 3 * (y2 - y1) - Cy;\n      Ay = y3 - y0 - Cy - By;\n\n      for (i = _i = 0; _i < 1000; i = ++_i) {\n        t = i / 1000;\n        curveX = Math.round(Ax * Math.pow(t, 3) + Bx * Math.pow(t, 2) + Cx * t + x0);\n        curveY = Math.round(Ay * Math.pow(t, 3) + By * Math.pow(t, 2) + Cy * t + y0);\n\n        if (lowBound && curveY < lowBound) {\n          curveY = lowBound;\n        } else if (highBound && curveY > highBound) {\n          curveY = highBound;\n        }\n\n        bezier[curveX] = curveY;\n      }\n\n      if (bezier.length < end[0] + 1) {\n        for (i = _j = 0, _ref = end[0]; 0 <= _ref ? _j <= _ref : _j >= _ref; i = 0 <= _ref ? ++_j : --_j) {\n          if (bezier[i] == null) {\n            leftCoord = [i - 1, bezier[i - 1]];\n\n            for (j = _k = i, _ref1 = end[0]; i <= _ref1 ? _k <= _ref1 : _k >= _ref1; j = i <= _ref1 ? ++_k : --_k) {\n              if (bezier[j] != null) {\n                rightCoord = [j, bezier[j]];\n                break;\n              }\n            }\n\n            bezier[i] = leftCoord[1] + (rightCoord[1] - leftCoord[1]) / (rightCoord[0] - leftCoord[0]) * (i - leftCoord[0]);\n          }\n        }\n      }\n\n      if (bezier[end[0]] == null) {\n        bezier[end[0]] = bezier[end[0] - 1];\n      }\n\n      return bezier;\n    };\n\n    return Calculate;\n  }();\n\n  Calculate = Caman.Calculate;\n\n  Caman.Convert = function () {\n    function Convert() {}\n\n    Convert.hexToRGB = function (hex) {\n      var b, g, r;\n\n      if (hex.charAt(0) === \"#\") {\n        hex = hex.substr(1);\n      }\n\n      r = parseInt(hex.substr(0, 2), 16);\n      g = parseInt(hex.substr(2, 2), 16);\n      b = parseInt(hex.substr(4, 2), 16);\n      return {\n        r: r,\n        g: g,\n        b: b\n      };\n    };\n\n    Convert.rgbToHSL = function (r, g, b) {\n      var d, h, l, max, min, s;\n\n      if (typeof r === \"object\") {\n        g = r.g;\n        b = r.b;\n        r = r.r;\n      }\n\n      r /= 255;\n      g /= 255;\n      b /= 255;\n      max = Math.max(r, g, b);\n      min = Math.min(r, g, b);\n      l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0;\n      } else {\n        d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n        h = function () {\n          switch (max) {\n            case r:\n              return (g - b) / d + (g < b ? 6 : 0);\n\n            case g:\n              return (b - r) / d + 2;\n\n            case b:\n              return (r - g) / d + 4;\n          }\n        }();\n\n        h /= 6;\n      }\n\n      return {\n        h: h,\n        s: s,\n        l: l\n      };\n    };\n\n    Convert.hslToRGB = function (h, s, l) {\n      var b, g, p, q, r;\n\n      if (typeof h === \"object\") {\n        s = h.s;\n        l = h.l;\n        h = h.h;\n      }\n\n      if (s === 0) {\n        r = g = b = l;\n      } else {\n        q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        p = 2 * l - q;\n        r = this.hueToRGB(p, q, h + 1 / 3);\n        g = this.hueToRGB(p, q, h);\n        b = this.hueToRGB(p, q, h - 1 / 3);\n      }\n\n      return {\n        r: r * 255,\n        g: g * 255,\n        b: b * 255\n      };\n    };\n\n    Convert.hueToRGB = function (p, q, t) {\n      if (t < 0) {\n        t += 1;\n      }\n\n      if (t > 1) {\n        t -= 1;\n      }\n\n      if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n      }\n\n      if (t < 1 / 2) {\n        return q;\n      }\n\n      if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n      }\n\n      return p;\n    };\n\n    Convert.rgbToHSV = function (r, g, b) {\n      var d, h, max, min, s, v;\n      r /= 255;\n      g /= 255;\n      b /= 255;\n      max = Math.max(r, g, b);\n      min = Math.min(r, g, b);\n      v = max;\n      d = max - min;\n      s = max === 0 ? 0 : d / max;\n\n      if (max === min) {\n        h = 0;\n      } else {\n        h = function () {\n          switch (max) {\n            case r:\n              return (g - b) / d + (g < b ? 6 : 0);\n\n            case g:\n              return (b - r) / d + 2;\n\n            case b:\n              return (r - g) / d + 4;\n          }\n        }();\n\n        h /= 6;\n      }\n\n      return {\n        h: h,\n        s: s,\n        v: v\n      };\n    };\n\n    Convert.hsvToRGB = function (h, s, v) {\n      var b, f, g, i, p, q, r, t;\n      i = Math.floor(h * 6);\n      f = h * 6 - i;\n      p = v * (1 - s);\n      q = v * (1 - f * s);\n      t = v * (1 - (1 - f) * s);\n\n      switch (i % 6) {\n        case 0:\n          r = v;\n          g = t;\n          b = p;\n          break;\n\n        case 1:\n          r = q;\n          g = v;\n          b = p;\n          break;\n\n        case 2:\n          r = p;\n          g = v;\n          b = t;\n          break;\n\n        case 3:\n          r = p;\n          g = q;\n          b = v;\n          break;\n\n        case 4:\n          r = t;\n          g = p;\n          b = v;\n          break;\n\n        case 5:\n          r = v;\n          g = p;\n          b = q;\n      }\n\n      return {\n        r: Math.floor(r * 255),\n        g: Math.floor(g * 255),\n        b: Math.floor(b * 255)\n      };\n    };\n\n    Convert.rgbToXYZ = function (r, g, b) {\n      var x, y, z;\n      r /= 255;\n      g /= 255;\n      b /= 255;\n\n      if (r > 0.04045) {\n        r = Math.pow((r + 0.055) / 1.055, 2.4);\n      } else {\n        r /= 12.92;\n      }\n\n      if (g > 0.04045) {\n        g = Math.pow((g + 0.055) / 1.055, 2.4);\n      } else {\n        g /= 12.92;\n      }\n\n      if (b > 0.04045) {\n        b = Math.pow((b + 0.055) / 1.055, 2.4);\n      } else {\n        b /= 12.92;\n      }\n\n      x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n      y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n      z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n      return {\n        x: x * 100,\n        y: y * 100,\n        z: z * 100\n      };\n    };\n\n    Convert.xyzToRGB = function (x, y, z) {\n      var b, g, r;\n      x /= 100;\n      y /= 100;\n      z /= 100;\n      r = 3.2406 * x + -1.5372 * y + -0.4986 * z;\n      g = -0.9689 * x + 1.8758 * y + 0.0415 * z;\n      b = 0.0557 * x + -0.2040 * y + 1.0570 * z;\n\n      if (r > 0.0031308) {\n        r = 1.055 * Math.pow(r, 0.4166666667) - 0.055;\n      } else {\n        r *= 12.92;\n      }\n\n      if (g > 0.0031308) {\n        g = 1.055 * Math.pow(g, 0.4166666667) - 0.055;\n      } else {\n        g *= 12.92;\n      }\n\n      if (b > 0.0031308) {\n        b = 1.055 * Math.pow(b, 0.4166666667) - 0.055;\n      } else {\n        b *= 12.92;\n      }\n\n      return {\n        r: r * 255,\n        g: g * 255,\n        b: b * 255\n      };\n    };\n\n    Convert.xyzToLab = function (x, y, z) {\n      var a, b, l, whiteX, whiteY, whiteZ;\n\n      if (typeof x === \"object\") {\n        y = x.y;\n        z = x.z;\n        x = x.x;\n      }\n\n      whiteX = 95.047;\n      whiteY = 100.0;\n      whiteZ = 108.883;\n      x /= whiteX;\n      y /= whiteY;\n      z /= whiteZ;\n\n      if (x > 0.008856451679) {\n        x = Math.pow(x, 0.3333333333);\n      } else {\n        x = 7.787037037 * x + 0.1379310345;\n      }\n\n      if (y > 0.008856451679) {\n        y = Math.pow(y, 0.3333333333);\n      } else {\n        y = 7.787037037 * y + 0.1379310345;\n      }\n\n      if (z > 0.008856451679) {\n        z = Math.pow(z, 0.3333333333);\n      } else {\n        z = 7.787037037 * z + 0.1379310345;\n      }\n\n      l = 116 * y - 16;\n      a = 500 * (x - y);\n      b = 200 * (y - z);\n      return {\n        l: l,\n        a: a,\n        b: b\n      };\n    };\n\n    Convert.labToXYZ = function (l, a, b) {\n      var x, y, z;\n\n      if (typeof l === \"object\") {\n        a = l.a;\n        b = l.b;\n        l = l.l;\n      }\n\n      y = (l + 16) / 116;\n      x = y + a / 500;\n      z = y - b / 200;\n\n      if (x > 0.2068965517) {\n        x = x * x * x;\n      } else {\n        x = 0.1284185493 * (x - 0.1379310345);\n      }\n\n      if (y > 0.2068965517) {\n        y = y * y * y;\n      } else {\n        y = 0.1284185493 * (y - 0.1379310345);\n      }\n\n      if (z > 0.2068965517) {\n        z = z * z * z;\n      } else {\n        z = 0.1284185493 * (z - 0.1379310345);\n      }\n\n      return {\n        x: x * 95.047,\n        y: y * 100.0,\n        z: z * 108.883\n      };\n    };\n\n    Convert.rgbToLab = function (r, g, b) {\n      var xyz;\n\n      if (typeof r === \"object\") {\n        g = r.g;\n        b = r.b;\n        r = r.r;\n      }\n\n      xyz = this.rgbToXYZ(r, g, b);\n      return this.xyzToLab(xyz);\n    };\n\n    Convert.labToRGB = function (l, a, b) {};\n\n    return Convert;\n  }();\n\n  Convert = Caman.Convert;\n\n  Caman.Event = function () {\n    function Event() {}\n\n    Event.events = {};\n    Event.types = [\"processStart\", \"processComplete\", \"renderStart\", \"renderFinished\", \"blockStarted\", \"blockFinished\"];\n\n    Event.trigger = function (target, type, data) {\n      var event, _i, _len, _ref, _results;\n\n      if (data == null) {\n        data = null;\n      }\n\n      if (this.events[type] && this.events[type].length) {\n        _ref = this.events[type];\n        _results = [];\n\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          event = _ref[_i];\n\n          if (event.target === null || target.id === event.target.id) {\n            _results.push(event.fn.call(target, data));\n          } else {\n            _results.push(void 0);\n          }\n        }\n\n        return _results;\n      }\n    };\n\n    Event.listen = function (target, type, fn) {\n      var _fn, _type;\n\n      if (typeof target === \"string\") {\n        _type = target;\n        _fn = type;\n        target = null;\n        type = _type;\n        fn = _fn;\n      }\n\n      if (__indexOf.call(this.types, type) < 0) {\n        return false;\n      }\n\n      if (!this.events[type]) {\n        this.events[type] = [];\n      }\n\n      this.events[type].push({\n        target: target,\n        fn: fn\n      });\n      return true;\n    };\n\n    return Event;\n  }();\n\n  Event = Caman.Event;\n\n  Caman.Filter = function () {\n    function Filter() {}\n\n    Filter.Type = {\n      Single: 1,\n      Kernel: 2,\n      LayerDequeue: 3,\n      LayerFinished: 4,\n      LoadOverlay: 5,\n      Plugin: 6\n    };\n\n    Filter.register = function (name, filterFunc) {\n      return Caman.prototype[name] = filterFunc;\n    };\n\n    return Filter;\n  }();\n\n  Filter = Caman.Filter;\n\n  Caman.IO = function () {\n    function IO() {}\n\n    IO.domainRegex = /(?:(?:http|https):\\/\\/)((?:\\w+)\\.(?:(?:\\w|\\.)+))/;\n\n    IO.isRemote = function (img) {\n      if (img == null) {\n        return false;\n      }\n\n      if (this.corsEnabled(img)) {\n        return false;\n      }\n\n      return this.isURLRemote(img.src);\n    };\n\n    IO.corsEnabled = function (img) {\n      var _ref;\n\n      return img.crossOrigin != null && ((_ref = img.crossOrigin.toLowerCase()) === 'anonymous' || _ref === 'use-credentials');\n    };\n\n    IO.isURLRemote = function (url) {\n      var matches;\n      matches = url.match(this.domainRegex);\n\n      if (matches) {\n        return matches[1] !== document.domain;\n      } else {\n        return false;\n      }\n    };\n\n    IO.remoteCheck = function (src) {\n      if (this.isURLRemote(src)) {\n        if (!Caman.remoteProxy.length) {\n          Log.info(\"Attempting to load a remote image without a configured proxy. URL: \" + src);\n        } else {\n          if (Caman.isURLRemote(Caman.remoteProxy)) {\n            Log.info(\"Cannot use a remote proxy for loading images.\");\n            return;\n          }\n\n          return this.proxyUrl(src);\n        }\n      }\n    };\n\n    IO.proxyUrl = function (src) {\n      return \"\" + Caman.remoteProxy + \"?\" + Caman.proxyParam + \"=\" + encodeURIComponent(src);\n    };\n\n    IO.useProxy = function (lang) {\n      var langToExt;\n      langToExt = {\n        ruby: 'rb',\n        python: 'py',\n        perl: 'pl',\n        javascript: 'js'\n      };\n      lang = lang.toLowerCase();\n\n      if (langToExt[lang] != null) {\n        lang = langToExt[lang];\n      }\n\n      return \"proxies/caman_proxy.\" + lang;\n    };\n\n    return IO;\n  }();\n\n  Caman.prototype.save = function () {\n    if (typeof exports !== \"undefined\" && exports !== null) {\n      return this.nodeSave.apply(this, arguments);\n    } else {\n      return this.browserSave.apply(this, arguments);\n    }\n  };\n\n  Caman.prototype.browserSave = function (type) {\n    var image;\n\n    if (type == null) {\n      type = \"png\";\n    }\n\n    type = type.toLowerCase();\n    image = this.toBase64(type).replace(\"image/\" + type, \"image/octet-stream\");\n    return document.location.href = image;\n  };\n\n  Caman.prototype.nodeSave = function (file, overwrite) {\n    var e, stats;\n\n    if (overwrite == null) {\n      overwrite = true;\n    }\n\n    try {\n      stats = fs.statSync(file);\n\n      if (stats.isFile() && !overwrite) {\n        return false;\n      }\n    } catch (_error) {\n      e = _error;\n      Log.debug(\"Creating output file \" + file);\n    }\n\n    return fs.writeFile(file, this.canvas.toBuffer(), function () {\n      return Log.debug(\"Finished writing to \" + file);\n    });\n  };\n\n  Caman.prototype.toImage = function (type) {\n    var img;\n    img = document.createElement('img');\n    img.src = this.toBase64(type);\n    img.width = this.dimensions.width;\n    img.height = this.dimensions.height;\n\n    if (window.devicePixelRatio) {\n      img.width /= window.devicePixelRatio;\n      img.height /= window.devicePixelRatio;\n    }\n\n    return img;\n  };\n\n  Caman.prototype.toBase64 = function (type) {\n    if (type == null) {\n      type = \"png\";\n    }\n\n    type = type.toLowerCase();\n    return this.canvas.toDataURL(\"image/\" + type);\n  };\n\n  IO = Caman.IO;\n\n  Caman.Layer = function () {\n    function Layer(c) {\n      this.c = c;\n      this.filter = this.c;\n      this.options = {\n        blendingMode: 'normal',\n        opacity: 1.0\n      };\n      this.layerID = Util.uniqid.get();\n      this.canvas = typeof exports !== \"undefined\" && exports !== null ? new Canvas() : document.createElement('canvas');\n      this.canvas.width = this.c.dimensions.width;\n      this.canvas.height = this.c.dimensions.height;\n      this.context = this.canvas.getContext('2d');\n      this.context.createImageData(this.canvas.width, this.canvas.height);\n      this.imageData = this.context.getImageData(0, 0, this.canvas.width, this.canvas.height);\n      this.pixelData = this.imageData.data;\n    }\n\n    Layer.prototype.newLayer = function (cb) {\n      return this.c.newLayer.call(this.c, cb);\n    };\n\n    Layer.prototype.setBlendingMode = function (mode) {\n      this.options.blendingMode = mode;\n      return this;\n    };\n\n    Layer.prototype.opacity = function (opacity) {\n      this.options.opacity = opacity / 100;\n      return this;\n    };\n\n    Layer.prototype.copyParent = function () {\n      var i, parentData, _i, _ref;\n\n      parentData = this.c.pixelData;\n\n      for (i = _i = 0, _ref = this.c.pixelData.length; _i < _ref; i = _i += 4) {\n        this.pixelData[i] = parentData[i];\n        this.pixelData[i + 1] = parentData[i + 1];\n        this.pixelData[i + 2] = parentData[i + 2];\n        this.pixelData[i + 3] = parentData[i + 3];\n      }\n\n      return this;\n    };\n\n    Layer.prototype.fillColor = function () {\n      return this.c.fillColor.apply(this.c, arguments);\n    };\n\n    Layer.prototype.overlayImage = function (image) {\n      if (typeof image === \"object\") {\n        image = image.src;\n      } else if (typeof image === \"string\" && image[0] === \"#\") {\n        image = $(image).src;\n      }\n\n      if (!image) {\n        return this;\n      }\n\n      this.c.renderer.renderQueue.push({\n        type: Filter.Type.LoadOverlay,\n        src: image,\n        layer: this\n      });\n      return this;\n    };\n\n    Layer.prototype.applyToParent = function () {\n      var i, layerData, parentData, result, rgbaLayer, rgbaParent, _i, _ref, _results;\n\n      parentData = this.c.pixelStack[this.c.pixelStack.length - 1];\n      layerData = this.c.pixelData;\n      _results = [];\n\n      for (i = _i = 0, _ref = layerData.length; _i < _ref; i = _i += 4) {\n        rgbaParent = {\n          r: parentData[i],\n          g: parentData[i + 1],\n          b: parentData[i + 2],\n          a: parentData[i + 3]\n        };\n        rgbaLayer = {\n          r: layerData[i],\n          g: layerData[i + 1],\n          b: layerData[i + 2],\n          a: layerData[i + 3]\n        };\n        result = Blender.execute(this.options.blendingMode, rgbaLayer, rgbaParent);\n        result.r = Util.clampRGB(result.r);\n        result.g = Util.clampRGB(result.g);\n        result.b = Util.clampRGB(result.b);\n\n        if (result.a == null) {\n          result.a = rgbaLayer.a;\n        }\n\n        parentData[i] = rgbaParent.r - (rgbaParent.r - result.r) * (this.options.opacity * (result.a / 255));\n        parentData[i + 1] = rgbaParent.g - (rgbaParent.g - result.g) * (this.options.opacity * (result.a / 255));\n\n        _results.push(parentData[i + 2] = rgbaParent.b - (rgbaParent.b - result.b) * (this.options.opacity * (result.a / 255)));\n      }\n\n      return _results;\n    };\n\n    return Layer;\n  }();\n\n  Layer = Caman.Layer;\n\n  Caman.Logger = function () {\n    function Logger() {\n      var name, _i, _len, _ref;\n\n      _ref = ['log', 'info', 'warn', 'error'];\n\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        name = _ref[_i];\n\n        this[name] = function (name) {\n          return function () {\n            var args, e;\n            args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n\n            if (!Caman.DEBUG) {\n              return;\n            }\n\n            try {\n              return console[name].apply(console, args);\n            } catch (_error) {\n              e = _error;\n              return console[name](args);\n            }\n          };\n        }(name);\n      }\n\n      this.debug = this.log;\n    }\n\n    return Logger;\n  }();\n\n  Log = new Caman.Logger();\n\n  Caman.Pixel = function () {\n    Pixel.coordinatesToLocation = function (x, y, width) {\n      return (y * width + x) * 4;\n    };\n\n    Pixel.locationToCoordinates = function (loc, width) {\n      var x, y;\n      y = Math.floor(loc / (width * 4));\n      x = loc % (width * 4) / 4;\n      return {\n        x: x,\n        y: y\n      };\n    };\n\n    function Pixel(r, g, b, a, c) {\n      this.r = r != null ? r : 0;\n      this.g = g != null ? g : 0;\n      this.b = b != null ? b : 0;\n      this.a = a != null ? a : 255;\n      this.c = c != null ? c : null;\n      this.loc = 0;\n    }\n\n    Pixel.prototype.setContext = function (c) {\n      return this.c = c;\n    };\n\n    Pixel.prototype.locationXY = function () {\n      var x, y;\n\n      if (this.c == null) {\n        throw \"Requires a CamanJS context\";\n      }\n\n      y = this.c.dimensions.height - Math.floor(this.loc / (this.c.dimensions.width * 4));\n      x = this.loc % (this.c.dimensions.width * 4) / 4;\n      return {\n        x: x,\n        y: y\n      };\n    };\n\n    Pixel.prototype.pixelAtLocation = function (loc) {\n      if (this.c == null) {\n        throw \"Requires a CamanJS context\";\n      }\n\n      return new Pixel(this.c.pixelData[loc], this.c.pixelData[loc + 1], this.c.pixelData[loc + 2], this.c.pixelData[loc + 3], this.c);\n    };\n\n    Pixel.prototype.getPixelRelative = function (horiz, vert) {\n      var newLoc;\n\n      if (this.c == null) {\n        throw \"Requires a CamanJS context\";\n      }\n\n      newLoc = this.loc + this.c.dimensions.width * 4 * (vert * -1) + 4 * horiz;\n\n      if (newLoc > this.c.pixelData.length || newLoc < 0) {\n        return new Pixel(0, 0, 0, 255, this.c);\n      }\n\n      return this.pixelAtLocation(newLoc);\n    };\n\n    Pixel.prototype.putPixelRelative = function (horiz, vert, rgba) {\n      var nowLoc;\n\n      if (this.c == null) {\n        throw \"Requires a CamanJS context\";\n      }\n\n      nowLoc = this.loc + this.c.dimensions.width * 4 * (vert * -1) + 4 * horiz;\n\n      if (newLoc > this.c.pixelData.length || newLoc < 0) {\n        return;\n      }\n\n      this.c.pixelData[newLoc] = rgba.r;\n      this.c.pixelData[newLoc + 1] = rgba.g;\n      this.c.pixelData[newLoc + 2] = rgba.b;\n      this.c.pixelData[newLoc + 3] = rgba.a;\n      return true;\n    };\n\n    Pixel.prototype.getPixel = function (x, y) {\n      var loc;\n\n      if (this.c == null) {\n        throw \"Requires a CamanJS context\";\n      }\n\n      loc = this.coordinatesToLocation(x, y, this.width);\n      return this.pixelAtLocation(loc);\n    };\n\n    Pixel.prototype.putPixel = function (x, y, rgba) {\n      var loc;\n\n      if (this.c == null) {\n        throw \"Requires a CamanJS context\";\n      }\n\n      loc = this.coordinatesToLocation(x, y, this.width);\n      this.c.pixelData[loc] = rgba.r;\n      this.c.pixelData[loc + 1] = rgba.g;\n      this.c.pixelData[loc + 2] = rgba.b;\n      return this.c.pixelData[loc + 3] = rgba.a;\n    };\n\n    Pixel.prototype.toString = function () {\n      return this.toKey();\n    };\n\n    Pixel.prototype.toHex = function (includeAlpha) {\n      var hex;\n\n      if (includeAlpha == null) {\n        includeAlpha = false;\n      }\n\n      hex = '#' + this.r.toString(16) + this.g.toString(16) + this.b.toString(16);\n\n      if (includeAlpha) {\n        return hex + this.a.toString(16);\n      } else {\n        return hex;\n      }\n    };\n\n    return Pixel;\n  }();\n\n  Pixel = Caman.Pixel;\n\n  Caman.Plugin = function () {\n    function Plugin() {}\n\n    Plugin.plugins = {};\n\n    Plugin.register = function (name, plugin) {\n      return this.plugins[name] = plugin;\n    };\n\n    Plugin.execute = function (context, name, args) {\n      return this.plugins[name].apply(context, args);\n    };\n\n    return Plugin;\n  }();\n\n  Plugin = Caman.Plugin;\n\n  Caman.Renderer = function () {\n    Renderer.Blocks = Caman.NodeJS ? require('os').cpus().length : 4;\n\n    function Renderer(c) {\n      this.c = c;\n      this.processNext = __bind(this.processNext, this);\n      this.renderQueue = [];\n      this.modPixelData = null;\n    }\n\n    Renderer.prototype.add = function (job) {\n      if (job == null) {\n        return;\n      }\n\n      return this.renderQueue.push(job);\n    };\n\n    Renderer.prototype.processNext = function () {\n      var layer;\n\n      if (this.renderQueue.length === 0) {\n        Event.trigger(this, \"renderFinished\");\n\n        if (this.finishedFn != null) {\n          this.finishedFn.call(this.c);\n        }\n\n        return this;\n      }\n\n      this.currentJob = this.renderQueue.shift();\n\n      switch (this.currentJob.type) {\n        case Filter.Type.LayerDequeue:\n          layer = this.c.canvasQueue.shift();\n          this.c.executeLayer(layer);\n          return this.processNext();\n\n        case Filter.Type.LayerFinished:\n          this.c.applyCurrentLayer();\n          this.c.popContext();\n          return this.processNext();\n\n        case Filter.Type.LoadOverlay:\n          return this.loadOverlay(this.currentJob.layer, this.currentJob.src);\n\n        case Filter.Type.Plugin:\n          return this.executePlugin();\n\n        default:\n          return this.executeFilter();\n      }\n    };\n\n    Renderer.prototype.execute = function (callback) {\n      this.finishedFn = callback;\n      this.modPixelData = Util.dataArray(this.c.pixelData.length);\n      return this.processNext();\n    };\n\n    Renderer.prototype.eachBlock = function (fn) {\n      var blockN,\n          blockPixelLength,\n          bnum,\n          end,\n          f,\n          i,\n          lastBlockN,\n          n,\n          start,\n          _i,\n          _ref,\n          _results,\n          _this = this;\n\n      this.blocksDone = 0;\n      n = this.c.pixelData.length;\n      blockPixelLength = Math.floor(n / 4 / Renderer.Blocks);\n      blockN = blockPixelLength * 4;\n      lastBlockN = blockN + n / 4 % Renderer.Blocks * 4;\n      _results = [];\n\n      for (i = _i = 0, _ref = Renderer.Blocks; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n        start = i * blockN;\n        end = start + (i === Renderer.Blocks - 1 ? lastBlockN : blockN);\n\n        if (Caman.NodeJS) {\n          f = Fiber(function () {\n            return fn.call(_this, i, start, end);\n          });\n          bnum = f.run();\n\n          _results.push(this.blockFinished(bnum));\n        } else {\n          _results.push(setTimeout(function (i, start, end) {\n            return function () {\n              return fn.call(_this, i, start, end);\n            };\n          }(i, start, end), 0));\n        }\n      }\n\n      return _results;\n    };\n\n    Renderer.prototype.executeFilter = function () {\n      Event.trigger(this.c, \"processStart\", this.currentJob);\n\n      if (this.currentJob.type === Filter.Type.Single) {\n        return this.eachBlock(this.renderBlock);\n      } else {\n        return this.eachBlock(this.renderKernel);\n      }\n    };\n\n    Renderer.prototype.executePlugin = function () {\n      Log.debug(\"Executing plugin \" + this.currentJob.plugin);\n      Plugin.execute(this.c, this.currentJob.plugin, this.currentJob.args);\n      Log.debug(\"Plugin \" + this.currentJob.plugin + \" finished!\");\n      return this.processNext();\n    };\n\n    Renderer.prototype.renderBlock = function (bnum, start, end) {\n      var i, pixel, _i;\n\n      Log.debug(\"Block #\" + bnum + \" - Filter: \" + this.currentJob.name + \", Start: \" + start + \", End: \" + end);\n      Event.trigger(this.c, \"blockStarted\", {\n        blockNum: bnum,\n        totalBlocks: Renderer.Blocks,\n        startPixel: start,\n        endPixel: end\n      });\n      pixel = new Pixel();\n      pixel.setContext(this.c);\n\n      for (i = _i = start; _i < end; i = _i += 4) {\n        pixel.loc = i;\n        pixel.r = this.c.pixelData[i];\n        pixel.g = this.c.pixelData[i + 1];\n        pixel.b = this.c.pixelData[i + 2];\n        pixel.a = this.c.pixelData[i + 3];\n        this.currentJob.processFn(pixel);\n        this.c.pixelData[i] = Util.clampRGB(pixel.r);\n        this.c.pixelData[i + 1] = Util.clampRGB(pixel.g);\n        this.c.pixelData[i + 2] = Util.clampRGB(pixel.b);\n        this.c.pixelData[i + 3] = Util.clampRGB(pixel.a);\n      }\n\n      if (Caman.NodeJS) {\n        return Fiber[\"yield\"](bnum);\n      } else {\n        return this.blockFinished(bnum);\n      }\n    };\n\n    Renderer.prototype.renderKernel = function (bnum, start, end) {\n      var adjust, adjustSize, bias, builder, builderIndex, divisor, i, j, k, kernel, n, name, p, pixel, res, _i, _j, _k;\n\n      name = this.currentJob.name;\n      bias = this.currentJob.bias;\n      divisor = this.currentJob.divisor;\n      n = this.c.pixelData.length;\n      adjust = this.currentJob.adjust;\n      adjustSize = Math.sqrt(adjust.length);\n      kernel = [];\n      Log.debug(\"Rendering kernel - Filter: \" + this.currentJob.name);\n      start = Math.max(start, this.c.dimensions.width * 4 * ((adjustSize - 1) / 2));\n      end = Math.min(end, n - this.c.dimensions.width * 4 * ((adjustSize - 1) / 2));\n      builder = (adjustSize - 1) / 2;\n      pixel = new Pixel();\n      pixel.setContext(this.c);\n\n      for (i = _i = start; _i < end; i = _i += 4) {\n        pixel.loc = i;\n        builderIndex = 0;\n\n        for (j = _j = -builder; -builder <= builder ? _j <= builder : _j >= builder; j = -builder <= builder ? ++_j : --_j) {\n          for (k = _k = builder; builder <= -builder ? _k <= -builder : _k >= -builder; k = builder <= -builder ? ++_k : --_k) {\n            p = pixel.getPixelRelative(j, k);\n            kernel[builderIndex * 3] = p.r;\n            kernel[builderIndex * 3 + 1] = p.g;\n            kernel[builderIndex * 3 + 2] = p.b;\n            builderIndex++;\n          }\n        }\n\n        res = this.processKernel(adjust, kernel, divisor, bias);\n        this.modPixelData[i] = Util.clampRGB(res.r);\n        this.modPixelData[i + 1] = Util.clampRGB(res.g);\n        this.modPixelData[i + 2] = Util.clampRGB(res.b);\n        this.modPixelData[i + 3] = this.c.pixelData[i + 3];\n      }\n\n      if (Caman.NodeJS) {\n        return Fiber[\"yield\"](bnum);\n      } else {\n        return this.blockFinished(bnum);\n      }\n    };\n\n    Renderer.prototype.blockFinished = function (bnum) {\n      var i, _i, _ref;\n\n      if (bnum >= 0) {\n        Log.debug(\"Block #\" + bnum + \" finished! Filter: \" + this.currentJob.name);\n      }\n\n      this.blocksDone++;\n      Event.trigger(this.c, \"blockFinished\", {\n        blockNum: bnum,\n        blocksFinished: this.blocksDone,\n        totalBlocks: Renderer.Blocks\n      });\n\n      if (this.blocksDone === Renderer.Blocks) {\n        if (this.currentJob.type === Filter.Type.Kernel) {\n          for (i = _i = 0, _ref = this.c.pixelData.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n            this.c.pixelData[i] = this.modPixelData[i];\n          }\n        }\n\n        if (bnum >= 0) {\n          Log.debug(\"Filter \" + this.currentJob.name + \" finished!\");\n        }\n\n        Event.trigger(this.c, \"processComplete\", this.currentJob);\n        return this.processNext();\n      }\n    };\n\n    Renderer.prototype.processKernel = function (adjust, kernel, divisor, bias) {\n      var i, val, _i, _ref;\n\n      val = {\n        r: 0,\n        g: 0,\n        b: 0\n      };\n\n      for (i = _i = 0, _ref = adjust.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n        val.r += adjust[i] * kernel[i * 3];\n        val.g += adjust[i] * kernel[i * 3 + 1];\n        val.b += adjust[i] * kernel[i * 3 + 2];\n      }\n\n      val.r = val.r / divisor + bias;\n      val.g = val.g / divisor + bias;\n      val.b = val.b / divisor + bias;\n      return val;\n    };\n\n    Renderer.prototype.loadOverlay = function (layer, src) {\n      var img,\n          proxyUrl,\n          _this = this;\n\n      img = document.createElement('img');\n\n      img.onload = function () {\n        layer.context.drawImage(img, 0, 0, _this.c.dimensions.width, _this.c.dimensions.height);\n        layer.imageData = layer.context.getImageData(0, 0, _this.c.dimensions.width, _this.c.dimensions.height);\n        layer.pixelData = layer.imageData.data;\n        _this.c.pixelData = layer.pixelData;\n        return _this.processNext();\n      };\n\n      proxyUrl = IO.remoteCheck(src);\n      return img.src = proxyUrl != null ? proxyUrl : src;\n    };\n\n    return Renderer;\n  }();\n\n  Renderer = Caman.Renderer;\n\n  Caman.Store = function () {\n    function Store() {}\n\n    Store.items = {};\n\n    Store.has = function (search) {\n      return this.items[search] != null;\n    };\n\n    Store.get = function (search) {\n      return this.items[search];\n    };\n\n    Store.put = function (name, obj) {\n      return this.items[name] = obj;\n    };\n\n    Store.execute = function (search, callback) {\n      var _this = this;\n\n      setTimeout(function () {\n        return callback.call(_this.get(search), _this.get(search));\n      }, 0);\n      return this.get(search);\n    };\n\n    Store.flush = function (name) {\n      if (name == null) {\n        name = false;\n      }\n\n      if (name) {\n        return delete this.items[name];\n      } else {\n        return this.items = {};\n      }\n    };\n\n    return Store;\n  }();\n\n  Store = Caman.Store;\n  Blender.register(\"normal\", function (rgbaLayer, rgbaParent) {\n    return {\n      r: rgbaLayer.r,\n      g: rgbaLayer.g,\n      b: rgbaLayer.b\n    };\n  });\n  Blender.register(\"multiply\", function (rgbaLayer, rgbaParent) {\n    return {\n      r: rgbaLayer.r * rgbaParent.r / 255,\n      g: rgbaLayer.g * rgbaParent.g / 255,\n      b: rgbaLayer.b * rgbaParent.b / 255\n    };\n  });\n  Blender.register(\"screen\", function (rgbaLayer, rgbaParent) {\n    return {\n      r: 255 - (255 - rgbaLayer.r) * (255 - rgbaParent.r) / 255,\n      g: 255 - (255 - rgbaLayer.g) * (255 - rgbaParent.g) / 255,\n      b: 255 - (255 - rgbaLayer.b) * (255 - rgbaParent.b) / 255\n    };\n  });\n  Blender.register(\"overlay\", function (rgbaLayer, rgbaParent) {\n    var result;\n    result = {};\n    result.r = rgbaParent.r > 128 ? 255 - 2 * (255 - rgbaLayer.r) * (255 - rgbaParent.r) / 255 : rgbaParent.r * rgbaLayer.r * 2 / 255;\n    result.g = rgbaParent.g > 128 ? 255 - 2 * (255 - rgbaLayer.g) * (255 - rgbaParent.g) / 255 : rgbaParent.g * rgbaLayer.g * 2 / 255;\n    result.b = rgbaParent.b > 128 ? 255 - 2 * (255 - rgbaLayer.b) * (255 - rgbaParent.b) / 255 : rgbaParent.b * rgbaLayer.b * 2 / 255;\n    return result;\n  });\n  Blender.register(\"difference\", function (rgbaLayer, rgbaParent) {\n    return {\n      r: rgbaLayer.r - rgbaParent.r,\n      g: rgbaLayer.g - rgbaParent.g,\n      b: rgbaLayer.b - rgbaParent.b\n    };\n  });\n  Blender.register(\"addition\", function (rgbaLayer, rgbaParent) {\n    return {\n      r: rgbaParent.r + rgbaLayer.r,\n      g: rgbaParent.g + rgbaLayer.g,\n      b: rgbaParent.b + rgbaLayer.b\n    };\n  });\n  Blender.register(\"exclusion\", function (rgbaLayer, rgbaParent) {\n    return {\n      r: 128 - 2 * (rgbaParent.r - 128) * (rgbaLayer.r - 128) / 255,\n      g: 128 - 2 * (rgbaParent.g - 128) * (rgbaLayer.g - 128) / 255,\n      b: 128 - 2 * (rgbaParent.b - 128) * (rgbaLayer.b - 128) / 255\n    };\n  });\n  Blender.register(\"softLight\", function (rgbaLayer, rgbaParent) {\n    var result;\n    result = {};\n    result.r = rgbaParent.r > 128 ? 255 - (255 - rgbaParent.r) * (255 - (rgbaLayer.r - 128)) / 255 : rgbaParent.r * (rgbaLayer.r + 128) / 255;\n    result.g = rgbaParent.g > 128 ? 255 - (255 - rgbaParent.g) * (255 - (rgbaLayer.g - 128)) / 255 : rgbaParent.g * (rgbaLayer.g + 128) / 255;\n    result.b = rgbaParent.b > 128 ? 255 - (255 - rgbaParent.b) * (255 - (rgbaLayer.b - 128)) / 255 : rgbaParent.b * (rgbaLayer.b + 128) / 255;\n    return result;\n  });\n  Blender.register(\"lighten\", function (rgbaLayer, rgbaParent) {\n    return {\n      r: rgbaParent.r > rgbaLayer.r ? rgbaParent.r : rgbaLayer.r,\n      g: rgbaParent.g > rgbaLayer.g ? rgbaParent.g : rgbaLayer.g,\n      b: rgbaParent.b > rgbaLayer.b ? rgbaParent.b : rgbaLayer.b\n    };\n  });\n  Blender.register(\"darken\", function (rgbaLayer, rgbaParent) {\n    return {\n      r: rgbaParent.r > rgbaLayer.r ? rgbaLayer.r : rgbaParent.r,\n      g: rgbaParent.g > rgbaLayer.g ? rgbaLayer.g : rgbaParent.g,\n      b: rgbaParent.b > rgbaLayer.b ? rgbaLayer.b : rgbaParent.b\n    };\n  });\n  Filter.register(\"fillColor\", function () {\n    var color;\n\n    if (arguments.length === 1) {\n      color = Convert.hexToRGB(arguments[0]);\n    } else {\n      color = {\n        r: arguments[0],\n        g: arguments[1],\n        b: arguments[2]\n      };\n    }\n\n    return this.process(\"fillColor\", function (rgba) {\n      rgba.r = color.r;\n      rgba.g = color.g;\n      rgba.b = color.b;\n      rgba.a = 255;\n      return rgba;\n    });\n  });\n  Filter.register(\"brightness\", function (adjust) {\n    adjust = Math.floor(255 * (adjust / 100));\n    return this.process(\"brightness\", function (rgba) {\n      rgba.r += adjust;\n      rgba.g += adjust;\n      rgba.b += adjust;\n      return rgba;\n    });\n  });\n  Filter.register(\"saturation\", function (adjust) {\n    adjust *= -0.01;\n    return this.process(\"saturation\", function (rgba) {\n      var max;\n      max = Math.max(rgba.r, rgba.g, rgba.b);\n\n      if (rgba.r !== max) {\n        rgba.r += (max - rgba.r) * adjust;\n      }\n\n      if (rgba.g !== max) {\n        rgba.g += (max - rgba.g) * adjust;\n      }\n\n      if (rgba.b !== max) {\n        rgba.b += (max - rgba.b) * adjust;\n      }\n\n      return rgba;\n    });\n  });\n  Filter.register(\"vibrance\", function (adjust) {\n    adjust *= -1;\n    return this.process(\"vibrance\", function (rgba) {\n      var amt, avg, max;\n      max = Math.max(rgba.r, rgba.g, rgba.b);\n      avg = (rgba.r + rgba.g + rgba.b) / 3;\n      amt = Math.abs(max - avg) * 2 / 255 * adjust / 100;\n\n      if (rgba.r !== max) {\n        rgba.r += (max - rgba.r) * amt;\n      }\n\n      if (rgba.g !== max) {\n        rgba.g += (max - rgba.g) * amt;\n      }\n\n      if (rgba.b !== max) {\n        rgba.b += (max - rgba.b) * amt;\n      }\n\n      return rgba;\n    });\n  });\n  Filter.register(\"greyscale\", function (adjust) {\n    return this.process(\"greyscale\", function (rgba) {\n      var avg;\n      avg = Calculate.luminance(rgba);\n      rgba.r = avg;\n      rgba.g = avg;\n      rgba.b = avg;\n      return rgba;\n    });\n  });\n  Filter.register(\"contrast\", function (adjust) {\n    adjust = Math.pow((adjust + 100) / 100, 2);\n    return this.process(\"contrast\", function (rgba) {\n      rgba.r /= 255;\n      rgba.r -= 0.5;\n      rgba.r *= adjust;\n      rgba.r += 0.5;\n      rgba.r *= 255;\n      rgba.g /= 255;\n      rgba.g -= 0.5;\n      rgba.g *= adjust;\n      rgba.g += 0.5;\n      rgba.g *= 255;\n      rgba.b /= 255;\n      rgba.b -= 0.5;\n      rgba.b *= adjust;\n      rgba.b += 0.5;\n      rgba.b *= 255;\n      return rgba;\n    });\n  });\n  Filter.register(\"hue\", function (adjust) {\n    return this.process(\"hue\", function (rgba) {\n      var b, g, h, hsv, r, _ref;\n\n      hsv = Convert.rgbToHSV(rgba.r, rgba.g, rgba.b);\n      h = hsv.h * 100;\n      h += Math.abs(adjust);\n      h = h % 100;\n      h /= 100;\n      hsv.h = h;\n      _ref = Convert.hsvToRGB(hsv.h, hsv.s, hsv.v), r = _ref.r, g = _ref.g, b = _ref.b;\n      rgba.r = r;\n      rgba.g = g;\n      rgba.b = b;\n      return rgba;\n    });\n  });\n  Filter.register(\"colorize\", function () {\n    var level, rgb;\n\n    if (arguments.length === 2) {\n      rgb = Convert.hexToRGB(arguments[0]);\n      level = arguments[1];\n    } else if (arguments.length === 4) {\n      rgb = {\n        r: arguments[0],\n        g: arguments[1],\n        b: arguments[2]\n      };\n      level = arguments[3];\n    }\n\n    return this.process(\"colorize\", function (rgba) {\n      rgba.r -= (rgba.r - rgb.r) * (level / 100);\n      rgba.g -= (rgba.g - rgb.g) * (level / 100);\n      rgba.b -= (rgba.b - rgb.b) * (level / 100);\n      return rgba;\n    });\n  });\n  Filter.register(\"invert\", function () {\n    return this.process(\"invert\", function (rgba) {\n      rgba.r = 255 - rgba.r;\n      rgba.g = 255 - rgba.g;\n      rgba.b = 255 - rgba.b;\n      return rgba;\n    });\n  });\n  Filter.register(\"sepia\", function (adjust) {\n    if (adjust == null) {\n      adjust = 100;\n    }\n\n    adjust /= 100;\n    return this.process(\"sepia\", function (rgba) {\n      rgba.r = Math.min(255, rgba.r * (1 - 0.607 * adjust) + rgba.g * (0.769 * adjust) + rgba.b * (0.189 * adjust));\n      rgba.g = Math.min(255, rgba.r * (0.349 * adjust) + rgba.g * (1 - 0.314 * adjust) + rgba.b * (0.168 * adjust));\n      rgba.b = Math.min(255, rgba.r * (0.272 * adjust) + rgba.g * (0.534 * adjust) + rgba.b * (1 - 0.869 * adjust));\n      return rgba;\n    });\n  });\n  Filter.register(\"gamma\", function (adjust) {\n    return this.process(\"gamma\", function (rgba) {\n      rgba.r = Math.pow(rgba.r / 255, adjust) * 255;\n      rgba.g = Math.pow(rgba.g / 255, adjust) * 255;\n      rgba.b = Math.pow(rgba.b / 255, adjust) * 255;\n      return rgba;\n    });\n  });\n  Filter.register(\"noise\", function (adjust) {\n    adjust = Math.abs(adjust) * 2.55;\n    return this.process(\"noise\", function (rgba) {\n      var rand;\n      rand = Calculate.randomRange(adjust * -1, adjust);\n      rgba.r += rand;\n      rgba.g += rand;\n      rgba.b += rand;\n      return rgba;\n    });\n  });\n  Filter.register(\"clip\", function (adjust) {\n    adjust = Math.abs(adjust) * 2.55;\n    return this.process(\"clip\", function (rgba) {\n      if (rgba.r > 255 - adjust) {\n        rgba.r = 255;\n      } else if (rgba.r < adjust) {\n        rgba.r = 0;\n      }\n\n      if (rgba.g > 255 - adjust) {\n        rgba.g = 255;\n      } else if (rgba.g < adjust) {\n        rgba.g = 0;\n      }\n\n      if (rgba.b > 255 - adjust) {\n        rgba.b = 255;\n      } else if (rgba.b < adjust) {\n        rgba.b = 0;\n      }\n\n      return rgba;\n    });\n  });\n  Filter.register(\"channels\", function (options) {\n    var chan, value;\n\n    if (typeof options !== \"object\") {\n      return this;\n    }\n\n    for (chan in options) {\n      if (!__hasProp.call(options, chan)) continue;\n      value = options[chan];\n\n      if (value === 0) {\n        delete options[chan];\n        continue;\n      }\n\n      options[chan] /= 100;\n    }\n\n    if (options.length === 0) {\n      return this;\n    }\n\n    return this.process(\"channels\", function (rgba) {\n      if (options.red != null) {\n        if (options.red > 0) {\n          rgba.r += (255 - rgba.r) * options.red;\n        } else {\n          rgba.r -= rgba.r * Math.abs(options.red);\n        }\n      }\n\n      if (options.green != null) {\n        if (options.green > 0) {\n          rgba.g += (255 - rgba.g) * options.green;\n        } else {\n          rgba.g -= rgba.g * Math.abs(options.green);\n        }\n      }\n\n      if (options.blue != null) {\n        if (options.blue > 0) {\n          rgba.b += (255 - rgba.b) * options.blue;\n        } else {\n          rgba.b -= rgba.b * Math.abs(options.blue);\n        }\n      }\n\n      return rgba;\n    });\n  });\n  Filter.register(\"curves\", function () {\n    var bezier, chans, cps, ctrl1, ctrl2, end, i, start, _i, _j, _ref, _ref1;\n\n    chans = arguments[0], cps = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n\n    if (typeof chans === \"string\") {\n      chans = chans.split(\"\");\n    }\n\n    if (chans[0] === \"v\") {\n      chans = ['r', 'g', 'b'];\n    }\n\n    if (cps.length < 3 || cps.length > 4) {\n      throw \"Invalid number of arguments to curves filter\";\n    }\n\n    start = cps[0];\n    ctrl1 = cps[1];\n    ctrl2 = cps.length === 4 ? cps[2] : cps[1];\n    end = cps[cps.length - 1];\n    bezier = Calculate.bezier(start, ctrl1, ctrl2, end, 0, 255);\n\n    if (start[0] > 0) {\n      for (i = _i = 0, _ref = start[0]; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n        bezier[i] = start[1];\n      }\n    }\n\n    if (end[0] < 255) {\n      for (i = _j = _ref1 = end[0]; _ref1 <= 255 ? _j <= 255 : _j >= 255; i = _ref1 <= 255 ? ++_j : --_j) {\n        bezier[i] = end[1];\n      }\n    }\n\n    return this.process(\"curves\", function (rgba) {\n      var _k, _ref2;\n\n      for (i = _k = 0, _ref2 = chans.length; 0 <= _ref2 ? _k < _ref2 : _k > _ref2; i = 0 <= _ref2 ? ++_k : --_k) {\n        rgba[chans[i]] = bezier[rgba[chans[i]]];\n      }\n\n      return rgba;\n    });\n  });\n  Filter.register(\"exposure\", function (adjust) {\n    var ctrl1, ctrl2, p;\n    p = Math.abs(adjust) / 100;\n    ctrl1 = [0, 255 * p];\n    ctrl2 = [255 - 255 * p, 255];\n\n    if (adjust < 0) {\n      ctrl1 = ctrl1.reverse();\n      ctrl2 = ctrl2.reverse();\n    }\n\n    return this.curves('rgb', [0, 0], ctrl1, ctrl2, [255, 255]);\n  });\n  Caman.Plugin.register(\"crop\", function (width, height, x, y) {\n    var canvas, ctx;\n\n    if (x == null) {\n      x = 0;\n    }\n\n    if (y == null) {\n      y = 0;\n    }\n\n    if (typeof exports !== \"undefined\" && exports !== null) {\n      canvas = new Canvas(width, height);\n    } else {\n      canvas = document.createElement('canvas');\n      Util.copyAttributes(this.canvas, canvas);\n      canvas.width = width;\n      canvas.height = height;\n    }\n\n    ctx = canvas.getContext('2d');\n    ctx.drawImage(this.canvas, x, y, width, height, 0, 0, width, height);\n    this.cropCoordinates = {\n      x: x,\n      y: y\n    };\n    this.cropped = true;\n    return this.replaceCanvas(canvas);\n  });\n  Caman.Plugin.register(\"resize\", function (newDims) {\n    var canvas, ctx;\n\n    if (newDims == null) {\n      newDims = null;\n    }\n\n    if (newDims === null || newDims.width == null && newDims.height == null) {\n      Log.error(\"Invalid or missing dimensions given for resize\");\n      return;\n    }\n\n    if (newDims.width == null) {\n      newDims.width = this.canvas.width * newDims.height / this.canvas.height;\n    } else if (newDims.height == null) {\n      newDims.height = this.canvas.height * newDims.width / this.canvas.width;\n    }\n\n    if (typeof exports !== \"undefined\" && exports !== null) {\n      canvas = new Canvas(newDims.width, newDims.height);\n    } else {\n      canvas = document.createElement('canvas');\n      Util.copyAttributes(this.canvas, canvas);\n      canvas.width = newDims.width;\n      canvas.height = newDims.height;\n    }\n\n    ctx = canvas.getContext('2d');\n    ctx.drawImage(this.canvas, 0, 0, this.canvas.width, this.canvas.height, 0, 0, newDims.width, newDims.height);\n    this.resized = true;\n    return this.replaceCanvas(canvas);\n  });\n  Caman.Filter.register(\"crop\", function () {\n    return this.processPlugin(\"crop\", Array.prototype.slice.call(arguments, 0));\n  });\n  Caman.Filter.register(\"resize\", function () {\n    return this.processPlugin(\"resize\", Array.prototype.slice.call(arguments, 0));\n  });\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}